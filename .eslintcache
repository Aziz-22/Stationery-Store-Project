[{"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\index.js":"1","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\App.js":"2","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Home.js":"3","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Fave.js":"4","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\APIPage.js":"5","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\DeletePage.js":"6","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\AddPage.js":"7","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\EditPage.js":"8","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\GetAll.js":"9"},{"size":504,"mtime":1610274809364,"results":"10","hashOfConfig":"11"},{"size":15124,"mtime":1629806126805,"results":"12","hashOfConfig":"11"},{"size":225,"mtime":1610433510489,"results":"13","hashOfConfig":"11"},{"size":1914,"mtime":1629791143603,"results":"14","hashOfConfig":"11"},{"size":3873,"mtime":1618659122442,"results":"15","hashOfConfig":"11"},{"size":2913,"mtime":1629705436860,"results":"16","hashOfConfig":"11"},{"size":5759,"mtime":1629808094263,"results":"17","hashOfConfig":"11"},{"size":9095,"mtime":1629801012595,"results":"18","hashOfConfig":"11"},{"size":1557,"mtime":1629025087173,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"bhzmgx",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\index.js",[],["41","42"],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\App.js",[],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Home.js",[],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Fave.js",[],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\APIPage.js",[],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\DeletePage.js",["43"],"import React, { Component } from \"react\";\r\nimport \"../index.css\";\r\nimport swal from \"sweetalert\";\r\nexport default class DeletePage extends Component {\r\n  myArr = this.props.productProps.name;\r\n  myArrQuan = this.props.productProps.quan;\r\n  myArrImages = this.props.productProps.images;\r\n  faveName = this.props.isfave.isFaveArrayName;\r\n  faveQuan = this.props.isfave.isFaveArrayQuan;\r\n  faveImage = this.props.isfave.isFaveArrayImage;\r\n\r\n  // This Method For Deleting All The Products When the user click the button.\r\n  deleteAll = () => {\r\n    console.log(\"Delete All\");\r\n\r\n    this.props.deleteAllFun();\r\n  };\r\n\r\n  // This method for delete a specific row in the cart\r\n  deleteProduct = (deletedRowName, deletedRowQuan, deletedRowImage) => {\r\n    // e.preventDefault();\r\n    // console.log(this.myArr);\r\n    console.log(deletedRowName, deletedRowQuan, deletedRowImage);\r\n    this.props.dOperation(\r\n      deletedRowName,\r\n      deletedRowQuan,\r\n      deletedRowImage,\r\n      this.myArr,\r\n      this.myArrQuan,\r\n      this.myArrImages\r\n    );\r\n  };\r\n\r\n  // Here To Print That Table as dynamically with a new product name and quantity\r\n  goCheck = () => {\r\n    let counter = 1;\r\n    console.log(this.myArr);\r\n    if (this.myArr.length > 0) {\r\n      return this.myArr.map((eachName, eachQuan) => {\r\n        \r\n        return (\r\n          <tr key={counter}>\r\n            <td>{counter++}</td>\r\n            <td>{eachName}</td>\r\n            <td>{this.props.productProps.quan[eachQuan]}</td>\r\n            <td>\r\n              <img\r\n                className=\"img-thumbnail\"\r\n                src={this.myArrImages[eachQuan]}\r\n                alt=\"Empty\"\r\n              ></img>\r\n            </td>\r\n            <td\r\n              id=\"edit\"\r\n              onClick={() =>\r\n                this.deleteProduct(\r\n                  eachName,\r\n                  this.props.productProps.quan[eachQuan],\r\n                  this.props.productProps.images[eachQuan]\r\n                )\r\n              }\r\n            >\r\n              Delete\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <span className=\"text-center\">\r\n            <h1>Your Cart</h1>\r\n          </span>\r\n\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Product Name</th>\r\n                <th>Quantity</th>\r\n                <th>Image</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.goCheck()}</tbody>\r\n          </table>\r\n\r\n          <button\r\n            style={{ margin: \"auto\", display: \"block\" }}\r\n            id=\"deleteBtn\"\r\n            className=\"btn btn-danger\"\r\n            onClick={this.deleteAll}\r\n          >\r\n            Clear All Products\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\AddPage.js",["44"],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\EditPage.js",["45"],"import React, { Component } from \"react\";\r\nimport \"../index.css\";\r\nimport swal from \"sweetalert\";\r\nimport { FaUpload } from \"react-icons/fa\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      //copyArray: this.props.productProps.name,\r\n      valueName: \"\",\r\n      valueQuan: 1,\r\n      valueImage: \"\",\r\n      //These new edit variables to copy the previous values that in the variables above\r\n      editName: \"\",\r\n      editQuan: 1,\r\n      editImage: \"\",\r\n    };\r\n\r\n    // this.GoToAPIpage = this.GoToAPIpage.bind(this);\r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n    this.handleChangeQuan = this.handleChangeQuan.bind(this);\r\n    this.handleChangeImage = this.handleChangeImage.bind(this);\r\n    this.Edit_Operation = this.Edit_Operation.bind(this);\r\n  }\r\n\r\n  handleChangeName(event) {\r\n    this.setState({\r\n      valueName: event.target.value,\r\n    });\r\n  }\r\n  handleChangeQuan(event) {\r\n    this.setState({\r\n      valueQuan: event.target.value,\r\n    });\r\n  }\r\n  handleChangeImage = (event) => {\r\n    // [...event.target.files].forEach((file) => {\r\n    //   console.log(\"file >>> \", file.name);\r\n\r\n      this.setState({\r\n        // file: URL.createObjectURL(event.target.files[0])\r\n        //   // images: URL.createObjectURL(file),\r\n        valueImage: URL.createObjectURL(event.target.files[0]),\r\n      });\r\n    // });\r\n  };\r\n\r\n  boxModal = (pName, pQuan, pImage) => {\r\n    console.log(\"Modal For => \", pName, \" \", pQuan, \" \", pImage);\r\n\r\n    // To Hold The Previous Values For Product Name And Quantity\r\n    this.setState({\r\n      valueName: pName,\r\n      valueQuan: pQuan,\r\n      valueImage: pImage,\r\n      editName: pName,\r\n      editQuan: pQuan,\r\n      editImage: pImage,\r\n    });\r\n\r\n    var modal = document.getElementById(\"myModal\");\r\n\r\n    // When the user clicks the button, open the modal\r\n    modal.style.display = \"block\";\r\n\r\n    // When the user clicks anywhere outside of the modal, close it\r\n    window.onclick = function (event) {\r\n      if (event.target === modal) {\r\n        modal.style.display = \"none\";\r\n      }\r\n    };\r\n\r\n    //return this.Edit_Operation(pName);\r\n  };\r\n\r\n  Edit_Operation = (e, newProductName, newQuan, newImage) => {\r\n    e.preventDefault();\r\n    var modal = document.getElementById(\"myModal\");\r\n    console.log(\"The New Image, \", this.state.editImage, \" OR \", newImage);\r\n    // let x = this.boxModal(m);\r\n\r\n    swal({\r\n      title: \"Are You Sure?\",\r\n      text: \"Are you sure you want to edit on this products?\",\r\n      icon: \"warning\",\r\n      buttons: true, // This button to tell the Sweetalert to add a cancel button with confirmation button\r\n      dangerMode: true, // The focus will automatically be set on the cancel button instead of the confirm button\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        swal({\r\n          title: \"Edit Successfully\",\r\n          icon: \"success\",\r\n        });\r\n        // These Two Variables To Hold The Place Of THe Previous values.\r\n        let knowIndexName = this.props.productProps.name.indexOf(\r\n          this.state.editName\r\n        );\r\n        console.log(\"IndexName: \", knowIndexName);\r\n        let knowIndexQuan = this.props.productProps.quan.indexOf(\r\n          this.state.editQuan\r\n        );\r\n        console.log(\"IndexQuan: \", knowIndexQuan);\r\n\r\n        let knowIndexImage = this.props.productProps.images.indexOf(\r\n          this.state.editImage\r\n        );\r\n        console.log(\"IndexImage : \", knowIndexImage);\r\n\r\n        //  Then replace it with new ones\r\n        this.props.productProps.name[knowIndexName] = newProductName;\r\n        this.props.productProps.quan[knowIndexQuan] = newQuan;\r\n        this.props.productProps.images[knowIndexImage] = newImage;\r\n\r\n        // To Update the arrays and re-rendering again with new list\r\n        this.setState({\r\n          objectOfProducts: {\r\n            name: this.props.productProps.name,\r\n            quan: this.props.productProps.quan,\r\n            images: this.props.productProps.images,\r\n          },\r\n        });\r\n      }\r\n    });\r\n\r\n    // Here To Close The Box modal after edit operation done.\r\n    modal.style.display = \"none\";\r\n    // this.goCheck();\r\n  };\r\n\r\n  // When the user clicks on <span> (x), close the modal\r\n  close = () => {\r\n    console.log(\"Close\");\r\n    var modal = document.getElementById(\"myModal\");\r\n    modal.style.display = \"none\";\r\n  };\r\n\r\n  // Here To Print That Table as dynamically with a new product name and quantity\r\n  goCheck = () => {\r\n    let counter = 1;\r\n    if (this.props.productProps.name.length > 0) {\r\n      return this.props.productProps.name.map((eachName, eachQuan) => {\r\n        return (\r\n          <tr key={counter}>\r\n            <td>{counter++}</td>\r\n            <td>{eachName}</td>\r\n            <td>{this.props.productProps.quan[eachQuan]}</td>\r\n            <td>\r\n              <img\r\n                className=\"img-thumbnail\"\r\n                src={this.props.productProps.images[eachQuan]}\r\n                alt=\"Empty\"\r\n              ></img>\r\n            </td>\r\n            <td\r\n              id=\"edit\"\r\n              onClick={() =>\r\n                this.boxModal(\r\n                  eachName,\r\n                  this.props.productProps.quan[eachQuan],\r\n                  this.props.productProps.images[eachQuan]\r\n                )\r\n              }\r\n            >\r\n              Edit\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // console.log(\"Image Now => \", this.state.valueImage,\" / \" , this.state.editImage)\r\n    return (\r\n      <div className=\"container\">\r\n        <span className=\"text-center\">\r\n          <h1>Your Cart</h1>\r\n        </span>\r\n\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Product Name</th>\r\n              <th>Quantity</th>\r\n              <th>Image</th>\r\n              <th>Edit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.goCheck()}</tbody>\r\n        </table>\r\n        {/*  The Modal */}\r\n        <div id=\"myModal\" className=\"modal\">\r\n          {/* Modal content */}\r\n          <div className=\"modal-content\">\r\n            <span className=\"close\" onClick={this.close}>\r\n              &times;\r\n            </span>\r\n            <div>\r\n              <form>\r\n                <div className=\"form-floating mb-5\">\r\n                  <input\r\n                    // {...console.log(\"150: \", this.state.editName , this.state.editQuan )}\r\n                    value={this.state.valueName}\r\n                    onChange={this.handleChangeName}\r\n                    type=\"text\"\r\n                    id=\"edit-input-id\"\r\n                    placeholder=\"Type Your Product Here\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  <label\r\n                    htmlFor=\"form-control-input1-id\"\r\n                    className=\"form-label\"\r\n                  >\r\n                    Edit a Product\r\n                  </label>\r\n                </div>\r\n                <div className=\"form-floating\">\r\n                  <input\r\n                    value={this.state.valueQuan}\r\n                    onChange={this.handleChangeQuan}\r\n                    type=\"number\"\r\n                    id=\"edit-input-id\"\r\n                    placeholder=\"How Many Pieces You Want?\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  <label\r\n                    htmlFor=\"form-control-input2-id\"\r\n                    className=\"form-label\"\r\n                  >\r\n                    Quantity\r\n                  </label>\r\n                </div>\r\n                <div className=\"form-floating\">\r\n                  <label\r\n                    style={{ marginTop: \"1vh\", marginLeft: \"12vw\" }}\r\n                    htmlFor=\"user-input-uploading\"\r\n                    className=\"form-label-uplod\"\r\n                  >\r\n                    Do You Want To Change The Image?\r\n                  </label>{\" \"}\r\n                  <input\r\n                    style={{ marginTop: \"11vh\", marginLeft: \"13vw\" }}\r\n                    className=\"form-contr\"\r\n                    type=\"file\"\r\n                    id=\"user-input-uploading\"\r\n                    onChange={this.handleChangeImage}\r\n                  />\r\n                </div>\r\n\r\n                {/* <label> Do You Want To Upload an Image?</label>{\" \"}\r\n              <input type=\"file\" id=\"user-input-upload\" />\r\n              <br />\r\n              <br /> */}\r\n                <input\r\n                  id=\"inputEditBtn\"\r\n                  type=\"submit\"\r\n                  value=\"Edit Product\"\r\n                  className=\"btn btn-success\"\r\n                  onClick={(e) =>\r\n                    this.Edit_Operation(\r\n                      e,\r\n                      this.state.valueName,\r\n                      this.state.valueQuan,\r\n                      this.state.valueImage\r\n                    )\r\n                  }\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\GetAll.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":3,"column":8,"nodeType":"52","messageId":"53","endLine":3,"endColumn":12},{"ruleId":"50","severity":1,"message":"54","line":6,"column":8,"nodeType":"52","messageId":"53","endLine":6,"endColumn":9},{"ruleId":"50","severity":1,"message":"55","line":4,"column":10,"nodeType":"52","messageId":"53","endLine":4,"endColumn":18},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'swal' is defined but never used.","Identifier","unusedVar","'$' is defined but never used.","'FaUpload' is defined but never used.","no-global-assign","no-unsafe-negation"]