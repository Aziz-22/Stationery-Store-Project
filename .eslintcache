[{"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\index.js":"1","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\App.js":"2","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\API_Page.js":"3","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Home.js":"4","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Edit_Page.js":"5","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Get_All.js":"6","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Add_Page.js":"7","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Delete_Page.js":"8","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Fave.js":"9"},{"size":504,"mtime":1610274809364,"results":"10","hashOfConfig":"11"},{"size":7104,"mtime":1610836544083,"results":"12","hashOfConfig":"11"},{"size":3502,"mtime":1610864737881,"results":"13","hashOfConfig":"11"},{"size":225,"mtime":1610433510489,"results":"14","hashOfConfig":"11"},{"size":5953,"mtime":1614971185966,"results":"15","hashOfConfig":"11"},{"size":1350,"mtime":1610629267250,"results":"16","hashOfConfig":"11"},{"size":3614,"mtime":1610832182781,"results":"17","hashOfConfig":"11"},{"size":3313,"mtime":1610622839330,"results":"18","hashOfConfig":"11"},{"size":2223,"mtime":1610715088381,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kpq1t7",{"filePath":"22","messages":"23","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\index.js",[],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\App.js",["41","42","43","44","45","46"],"import React, { Component } from \"react\";\nimport Home from \"./Components/Home\";\nimport Edit_Page from \"./Components/Edit_Page\";\nimport Add_Page from \"./Components/Add_Page\";\nimport \"./App.css\";\nimport API_Page from \"./Components/API_Page\";\nimport Delete_Page from \"./Components/Delete_Page\";\nimport Get_All from \"./Components/Get_All\";\nimport Fave from \"./Components/Fave\";\nimport logo from \"./Images/Logo_Stationery.PNG\";\n// This Import For Brings Icons From react-icons/ai\nimport { RiHeartAddLine } from \"react-icons/ri\";\n\n// These Imports For Router\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  NavLink,\n} from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      objectOfProducts: {\n        name: [],\n        quan: [],\n      },\n\n      //To store the favorite products name and quantity.\n      faveObjects: {\n        isFaveArrayName: [],\n        isFaveArrayQuan: [],\n      },\n    };\n\n    this.AddProduct = this.AddProduct.bind(this);\n  }\n  // let newName = this.state.objectOfProducts.name\n  // newName.push(pName)\n  // this.setState({\n  //     name: newName\n  // })\n\n  AddProduct = (pName, quan) => {\n    // This Function for add a product and save it in the array.\n    console.log(pName, quan);\n\n    this.setState({\n      objectOfProducts: {\n        name: [...this.state.objectOfProducts.name, pName],\n        quan: [...this.state.objectOfProducts.quan, quan],\n      },\n    });\n    alert(\"Added Successfully \");\n    console.log(\"Added Success\");\n  };\n\n  myFave = (faveName, faveQuan) => {\n    // This Function For Add a marked product to the favorite array.\n\n    console.log(faveName, faveQuan);\n    let newFaveArrayName = this.state.faveObjects.isFaveArrayName;\n    newFaveArrayName.push(faveName);\n    let newFaveArrayQuan = this.state.faveObjects.isFaveArrayQuan;\n    newFaveArrayQuan.push(faveQuan);\n    this.setState({\n      faveObjects: {\n        isFaveArrayName: newFaveArrayName,\n        isFaveArrayQuan: newFaveArrayQuan,\n      },\n    });\n    console.log(this.state.faveObjects.isFaveArrayName);\n    console.log(this.state.faveObjects.isFaveArrayQuan);\n\n    alert(\"Added Successfully\");\n  };\n\n  removeOperation = (removeName, removeQuan) => {\n    console.log(\"RemoveFave From APP = \", removeName, \" \", removeQuan);\n\n    if (this.state.faveObjects.isFaveArrayName.includes(removeName)) {\n      let knowIndex = this.state.faveObjects.isFaveArrayName.indexOf(\n        removeName\n      );\n      this.state.faveObjects.isFaveArrayName.splice(knowIndex, 1);\n    }\n    if (this.state.faveObjects.isFaveArrayQuan.includes(removeQuan)) {\n      let knowIndex = this.state.faveObjects.isFaveArrayQuan.indexOf(\n        removeQuan\n      );\n      this.state.faveObjects.isFaveArrayQuan.splice(knowIndex, 1);\n    }\n\n    // To Update the arrays and re-rendering again with new list\n    this.setState({\n      faveProps: {\n        isFaveArrayName: this.state.faveObjects.isFaveArrayName,\n        isFaveArrayQuan: this.state.faveObjects.isFaveArrayQuan,\n      },\n    });\n\n    alert(\"Removed Successfully \");\n  };\n\n  render() {\n    console.log(\"New Array => \", this.state.objectOfProducts);\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Home />\n            <nav className=\"app-nav\">\n              {/* Logo For Website... */}\n\n              <h1 className=\"name-website\">Stationery Store In Your Hands</h1>\n\n              <img\n                src={logo}\n                className=\"img-rounded\"\n                alt=\"Image \"\n                width=\"15%\"\n                height=\"15%\"\n                rounded\n              ></img>\n\n              <NavLink\n                to=\"/API_Page\"\n                style={{ textDecoration: \"none\" }}\n                activeClassName=\"api-link\"\n              >\n                <h4 id=\"API-tag\">Something Fun</h4>\n              </NavLink>\n              <NavLink\n                to=\"/Fave\"\n                style={{ textDecoration: \"none\" }}\n                activeClassName=\"fave-link\"\n              >\n                <h2 id=\"fave-icon\">\n                  <RiHeartAddLine />\n                  <span className=\"counter-style\">\n                    {this.state.faveObjects.isFaveArrayName.length}\n                  </span>\n                </h2>\n              </NavLink>\n            </nav>\n\n            <h3 className=\"question\"> What Do You Want?</h3>\n\n            <div className=\"link-tags\">\n              {/* We can use Link tag, but I've used NavLink to styling purpose only because if we have used NavLink we can't add styling on it. */}\n\n              <NavLink\n                style={{ textDecoration: \"none\" }}\n                activeClassName=\"add-link\"\n                to=\"/Add-Page\"\n              >\n                Add A Product\n              </NavLink>\n              <NavLink\n                style={{ textDecoration: \"none\" }}\n                activeClassName=\"edit-link\"\n                to=\"/Edit_Page\"\n              >\n                Edit On A Product\n              </NavLink>\n              <NavLink\n                style={{ textDecoration: \"none\" }}\n                activeClassName=\"delete-link\"\n                to=\"/Delete_Page\"\n              >\n                Delete A Product/s\n              </NavLink>\n              <NavLink\n                style={{ textDecoration: \"none\" }}\n                activeClassName=\"get-link\"\n                to=\"/Get_All\"\n              >\n                Get All Products\n              </NavLink>\n            </div>\n\n            {/* Line 176: Here To set the Home Component as Default Page. */}\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route exact path=\"/Home\" component={Home}></Route>\n            <Route\n              exact\n              path=\"/Add-Page\"\n              component={() => <Add_Page test={this.AddProduct} />}\n            ></Route>\n            <Route\n              exact\n              path=\"/Edit_Page\"\n              component={() => (\n                <Edit_Page productProps={this.state.objectOfProducts} />\n              )}\n            ></Route>\n            <Route\n              exact\n              path=\"/Delete_Page\"\n              component={() => (\n                <Delete_Page\n                  productProps={this.state.objectOfProducts}\n                  myFun={this.delete}\n                />\n              )}\n            ></Route>\n            <Route\n              exact\n              path=\"/Get_All\"\n              component={() => (\n                <Get_All\n                  productProps={this.state.objectOfProducts}\n                  myFun={this.myFave}\n                />\n              )}\n            ></Route>\n            <Route exact path=\"/API_Page\" component={API_Page}></Route>\n            <Route\n              exact\n              path=\"/Fave\"\n              component={() => (\n                <Fave\n                  faveProps={this.state.faveObjects}\n                  removeProps={this.removeOperation}\n                />\n              )}\n            ></Route>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\API_Page.js",[],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Home.js",[],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Edit_Page.js",["47"],"import React, { Component } from \"react\";\r\nimport \"../index.css\";\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      //copyArray: this.props.productProps.name,\r\n      valueName: \"\",\r\n      valueQuan: 1,\r\n      //These new edit variables to copy the previous values that in the variables above\r\n      editName: \"\",\r\n      editQuan: 1,\r\n    };\r\n\r\n    // this.GoToAPIpage = this.GoToAPIpage.bind(this);\r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n    this.handleChangeQuan = this.handleChangeQuan.bind(this);\r\n    this.Edit_Operation = this.Edit_Operation.bind(this);\r\n  }\r\n\r\n  handleChangeName(event) {\r\n    this.setState({\r\n      valueName: event.target.value,\r\n    });\r\n  }\r\n  handleChangeQuan(event) {\r\n    this.setState({\r\n      valueQuan: event.target.value,\r\n    });\r\n  }\r\n\r\n  boxModal = (pName, pQuan) => {\r\n    console.log(\"Modal For => \", pName, \" \", pQuan);\r\n\r\n    // To Hold The Previous Values For Product Name And Quantity\r\n    this.setState({\r\n      editName: pName,\r\n      editQuan: pQuan,\r\n    });\r\n\r\n    var modal = document.getElementById(\"myModal\");\r\n\r\n    // When the user clicks the button, open the modal\r\n    modal.style.display = \"block\";\r\n\r\n    // When the user clicks anywhere outside of the modal, close it\r\n    window.onclick = function (event) {\r\n      if (event.target === modal) {\r\n        modal.style.display = \"none\";\r\n      }\r\n    };\r\n\r\n    //return this.Edit_Operation(pName);\r\n  };\r\n\r\n  Edit_Operation = (e, newProductName, newQuan) => {\r\n    e.preventDefault();\r\n    var modal = document.getElementById(\"myModal\");\r\n    // let x = this.boxModal(m);\r\n\r\n    console.log(\"I Wanna Edit => \", this.state.editName);\r\n    console.log(\"I Wanna Edit Numbre => \", this.state.editQuan);\r\n\r\n    // These Two Variables To Hold The Place Of THe Previous values.\r\n    let knowIndexName = this.props.productProps.name.indexOf(\r\n      this.state.editName\r\n    );\r\n    let knowIndexQuan = this.props.productProps.quan.indexOf(\r\n      this.state.editQuan\r\n    );\r\n    //  Then replace it with new ones\r\n    this.props.productProps.name[knowIndexName] = newProductName;\r\n    this.props.productProps.quan[knowIndexQuan] = newQuan;\r\n\r\n    // To Update the arrays and re-rendering again with new list\r\n    this.setState({\r\n      objectOfProducts: {\r\n        name: this.props.productProps.name,\r\n        quan: this.props.productProps.quan,\r\n      },\r\n    });\r\n    alert(\"Edit Successfully\");\r\n    // Here To Close The Box modal after edit operation done.\r\n    modal.style.display = \"none\";\r\n    // this.goCheck();\r\n  };\r\n\r\n  // When the user clicks on <span> (x), close the modal\r\n  close = () => {\r\n    console.log(\"Close\");\r\n    var modal = document.getElementById(\"myModal\");\r\n    modal.style.display = \"none\";\r\n  };\r\n\r\n  // Here To Print That Table as dynamically with a new product name and quantity\r\n  goCheck = () => {\r\n    let counter = 1;\r\n    if (this.props.productProps.name.length > 0) {\r\n      return this.props.productProps.name.map((eachName, eachQuan) => {\r\n        return (\r\n          <tr key={counter}>\r\n            <td>{counter++}</td>\r\n            <td>{eachName}</td>\r\n            <td>{this.props.productProps.quan[eachQuan]}</td>\r\n            <td\r\n              id=\"edit\"\r\n              onClick={() =>\r\n                this.boxModal(eachName, this.props.productProps.quan[eachQuan])\r\n              }\r\n            >\r\n              Edit\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Your Cart</h2>\r\n\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Product Name</th>\r\n              <th>Quantity</th>\r\n              <th>Edit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.goCheck()}</tbody>\r\n        </table>\r\n        {/*  The Modal */}\r\n        <div id=\"myModal\" className=\"modal\">\r\n          {/* Modal content */}\r\n          <div className=\"modal-content\">\r\n            <span className=\"close\" onClick={this.close}>\r\n              &times;\r\n            </span>\r\n            <form>\r\n              <div className=\"my-form-group\">\r\n                <label className=\"form-label\">What Do You Want To Add?</label>{\" \"}\r\n                <input\r\n                  value={this.state.valueName}\r\n                  onChange={this.handleChangeName}\r\n                  type=\"text\"\r\n                  id=\"user-input-pName-edit\"\r\n                  placeholder=\"Type Your Product Here\"\r\n                  value={this.state.valueName}\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-3\">\r\n                  <label className=\"form-label-edit\">Quantity </label>{\" \"}\r\n                  <input\r\n                    value={this.state.valueQuan}\r\n                    onChange={this.handleChangeQuan}\r\n                    type=\"number\"\r\n                    id=\"user-input-pQuan-edit\"\r\n                    placeholder=\"How Many Pieces You Want?\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n            \r\n              <input\r\n                id = \"inputBtn\"\r\n                type=\"submit\"\r\n                value=\"Edit Product\"\r\n                className=\"btn btn-success\"\r\n                onClick={(e) =>\r\n                  this.Edit_Operation(\r\n                    e,\r\n                    this.state.valueName,\r\n                    this.state.valueQuan\r\n                  )\r\n                }\r\n              />\r\n              <input id = \"inputBtn\" type=\"reset\" value=\"Reset\" className=\"btn btn-danger\" />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Get_All.js",[],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Add_Page.js",["48","49","50","51","52"],"import React, { Component } from \"react\";\r\nimport \"../index.css\";\r\nimport App from \"../App\";\r\nimport Edit_Page from \"./Edit_Page\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport { Switch } from \"react-router-dom/cjs/react-router-dom.min\";\r\nexport default class Add_Page extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // Here To Store All Products That Comes From The User's Form.\r\n      //   objectOfProducts: {\r\n      //     name: [],\r\n      //     quan: [],\r\n      //   },\r\n\r\n      valueName: \"\",\r\n      valueQuan: 1,\r\n    };\r\n\r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n    this.handleChangeQuan = this.handleChangeQuan.bind(this);\r\n  }\r\n\r\n  handleChangeName(event) {\r\n    this.setState({\r\n      valueName: event.target.value,\r\n    });\r\n  }\r\n  handleChangeQuan(event) {\r\n    this.setState({\r\n      valueQuan: event.target.value,\r\n    });\r\n  }\r\n  Add_Operation = (e) => {\r\n    // To Prevent The Refresh The Page And Fire Toggle\r\n    e.preventDefault();\r\n    \r\n    console.log(\"Name \", this.state.valueName, \"Quan \", this.state.valueQuan);\r\n    this.props.test(this.state.valueName, this.state.valueQuan);\r\n\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n         \r\n\r\n          <h1>Add A Product</h1>\r\n\r\n          <div>\r\n            <form>\r\n              <div id = \"div-input\" className=\"form-group\">\r\n                <label className=\"text-pName\">What Do You Want To Add?</label>{\" \"}\r\n                <center>\r\n                <input\r\n                  value={this.state.valueName}\r\n                  onChange={this.handleChangeName}\r\n                  type=\"text\"\r\n                  id=\"user-input-pName\"\r\n                  placeholder=\"Type Your Product Here\"\r\n                  className=\"form-control\"\r\n                  />\r\n                  </center>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div id = \"div-input\"  className=\"form-group\">\r\n                <label className=\"text-quan\">Quantity </label>{\" \"}\r\n                <center>\r\n                <input\r\n                  value={this.state.valueQuan}\r\n                  onChange={this.handleChangeQuan}\r\n                  type=\"number\"\r\n                  id=\"user-input-pQuan\"\r\n                  placeholder=\"How Many Pieces You Want?\"\r\n                  className=\"form-control\"\r\n                  />\r\n                  </center>\r\n              </div>\r\n              <br />\r\n              <br />\r\n              {/* <label> Do You Want To Upload an Image?</label>{\" \"}\r\n              <input type=\"file\" id=\"user-input-upload\" />\r\n              <br />\r\n              <br /> */}\r\n              <input\r\n                id=\"inputBtn\"\r\n                type=\"submit\"\r\n                value=\"Add Product\"\r\n                className=\"btn btn-primary\"\r\n                onClick={this.Add_Operation}\r\n              />\r\n              <input\r\n                id=\"inputBtn\"\r\n                type=\"reset\"\r\n                value=\"Reset\"\r\n                className=\"btn btn-danger\"\r\n              />\r\n            </form>\r\n          </div>\r\n          <Route\r\n            exact\r\n            path=\"/Edit_Page\"\r\n            foo=\"I'm Prop\"\r\n            component={() => (\r\n              <Edit_Page arrayProps={this.state.objectOfProducts.name} />\r\n            )}\r\n          ></Route>\r\n          {/* <Route exact path=\"/\" component={App}></Route> */}\r\n          {/* <Route exact path=\"/Edit_Page\" component={Edit_Page}></Route> */}\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Delete_Page.js",[],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Fave.js",[],{"ruleId":"53","severity":1,"message":"54","line":18,"column":3,"nodeType":"55","messageId":"56","endLine":18,"endColumn":7},{"ruleId":"57","severity":1,"message":"58","line":120,"column":15,"nodeType":"59","endLine":127,"endColumn":16},{"ruleId":"60","severity":1,"message":"61","line":191,"column":32,"nodeType":"59","endLine":191,"endColumn":67},{"ruleId":"60","severity":1,"message":"62","line":197,"column":17,"nodeType":"59","endLine":197,"endColumn":73},{"ruleId":"60","severity":1,"message":"63","line":204,"column":17,"nodeType":"59","endLine":207,"endColumn":19},{"ruleId":"60","severity":1,"message":"64","line":214,"column":17,"nodeType":"59","endLine":217,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":152,"column":19,"nodeType":"67","endLine":152,"endColumn":47},{"ruleId":"53","severity":1,"message":"68","line":3,"column":8,"nodeType":"55","messageId":"56","endLine":3,"endColumn":11},{"ruleId":"53","severity":1,"message":"54","line":8,"column":3,"nodeType":"55","messageId":"56","endLine":8,"endColumn":7},{"ruleId":"53","severity":1,"message":"69","line":9,"column":3,"nodeType":"55","messageId":"56","endLine":9,"endColumn":10},{"ruleId":"53","severity":1,"message":"70","line":11,"column":10,"nodeType":"55","messageId":"56","endLine":11,"endColumn":16},{"ruleId":"60","severity":1,"message":"62","line":115,"column":15,"nodeType":"59","endLine":115,"endColumn":74},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component Add_Page must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Edit_Page must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Delete_Page must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Get_All must be in PascalCase or SCREAMING_SNAKE_CASE","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'App' is defined but never used.","'NavLink' is defined but never used.","'Switch' is defined but never used."]