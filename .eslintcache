[{"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\index.js":"1","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\App.js":"2","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Home.js":"3","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Fave.js":"4","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\APIPage.js":"5","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\DeletePage.js":"6","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\AddPage.js":"7","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\EditPage.js":"8","C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\GetAll.js":"9"},{"size":504,"mtime":1610274809364,"results":"10","hashOfConfig":"11"},{"size":7080,"mtime":1615050955268,"results":"12","hashOfConfig":"11"},{"size":225,"mtime":1610433510489,"results":"13","hashOfConfig":"11"},{"size":2223,"mtime":1610715088381,"results":"14","hashOfConfig":"11"},{"size":3501,"mtime":1615050095488,"results":"15","hashOfConfig":"11"},{"size":3312,"mtime":1615050114732,"results":"16","hashOfConfig":"11"},{"size":3565,"mtime":1615050978934,"results":"17","hashOfConfig":"11"},{"size":5905,"mtime":1615050153315,"results":"18","hashOfConfig":"11"},{"size":1349,"mtime":1615050383674,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bhzmgx",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\index.js",[],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\App.js",["40"],"import React, { Component } from \"react\";\nimport Home from \"./Components/Home\";\nimport EditPage from \"./Components/EditPage\";\nimport AddPage from \"./Components/AddPage\";\nimport \"./App.css\";\nimport APIPage from \"./Components/APIPage\";\nimport DeletePage from \"./Components/DeletePage\";\nimport GetAll from \"./Components/GetAll\";\nimport Fave from \"./Components/Fave\";\nimport logo from \"./Images/Logo_Stationery.PNG\";\n// This Import For Brings Icons From react-icons/ai\nimport { RiHeartAddLine } from \"react-icons/ri\";\n\n// These Imports For Router\nimport {\n  BrowserRouter as Router,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      objectOfProducts: {\n        name: [],\n        quan: [],\n      },\n\n      //To store the favorite products name and quantity.\n      faveObjects: {\n        isFaveArrayName: [],\n        isFaveArrayQuan: [],\n      },\n    };\n\n    this.AddProduct = this.AddProduct.bind(this);\n  }\n  // let newName = this.state.objectOfProducts.name\n  // newName.push(pName)\n  // this.setState({\n  //     name: newName\n  // })\n\n  AddProduct = (pName, quan) => {\n    // This Function for add a product and save it in the array.\n    console.log(pName, quan);\n\n    this.setState({\n      objectOfProducts: {\n        name: [...this.state.objectOfProducts.name, pName],\n        quan: [...this.state.objectOfProducts.quan, quan],\n      },\n    });\n    alert(\"Added Successfully \");\n    console.log(\"Added Success\");\n  };\n\n  myFave = (faveName, faveQuan) => {\n    // This Function For Add a marked product to the favorite array.\n\n    console.log(faveName, faveQuan);\n    let newFaveArrayName = this.state.faveObjects.isFaveArrayName;\n    newFaveArrayName.push(faveName);\n    let newFaveArrayQuan = this.state.faveObjects.isFaveArrayQuan;\n    newFaveArrayQuan.push(faveQuan);\n    this.setState({\n      faveObjects: {\n        isFaveArrayName: newFaveArrayName,\n        isFaveArrayQuan: newFaveArrayQuan,\n      },\n    });\n    console.log(this.state.faveObjects.isFaveArrayName);\n    console.log(this.state.faveObjects.isFaveArrayQuan);\n\n    alert(\"Added Successfully\");\n  };\n\n  removeOperation = (removeName, removeQuan) => {\n    console.log(\"RemoveFave From APP = \", removeName, \" \", removeQuan);\n\n    if (this.state.faveObjects.isFaveArrayName.includes(removeName)) {\n      let knowIndex = this.state.faveObjects.isFaveArrayName.indexOf(\n        removeName\n      );\n      this.state.faveObjects.isFaveArrayName.splice(knowIndex, 1);\n    }\n    if (this.state.faveObjects.isFaveArrayQuan.includes(removeQuan)) {\n      let knowIndex = this.state.faveObjects.isFaveArrayQuan.indexOf(\n        removeQuan\n      );\n      this.state.faveObjects.isFaveArrayQuan.splice(knowIndex, 1);\n    }\n\n    // To Update the arrays and re-rendering again with new list\n    this.setState({\n      faveProps: {\n        isFaveArrayName: this.state.faveObjects.isFaveArrayName,\n        isFaveArrayQuan: this.state.faveObjects.isFaveArrayQuan,\n      },\n    });\n\n    alert(\"Removed Successfully \");\n  };\n\n  render() {\n    console.log(\"New Array => \", this.state.objectOfProducts);\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Home />\n            <nav className=\"app-nav\">\n              {/* Logo For Website... */}\n\n              <h1 className=\"name-website\">Stationery Store In Your Hands</h1>\n\n              <img\n                src={logo}\n                className=\"img-rounded\"\n                alt=\"Image\"\n                width=\"15%\"\n                height=\"15%\"\n                rounded\n              ></img>\n\n              <NavLink\n                to=\"/API_Page\"\n                style={{ textDecoration: \"none\" }}\n                activeClassName=\"api-link\"\n              >\n                <h4 id=\"API-tag\">Something Fun</h4>\n              </NavLink>\n              <NavLink\n                to=\"/Fave\"\n                style={{ textDecoration: \"none\" }}\n                activeClassName=\"fave-link\"\n              >\n                <h2 id=\"fave-icon\">\n                  <RiHeartAddLine />\n                  <span className=\"counter-style\">\n                    {this.state.faveObjects.isFaveArrayName.length}\n                  </span>\n                </h2>\n              </NavLink>\n            </nav>\n\n            <h3 className=\"question\"> What Do You Want?</h3>\n\n            <div className=\"link-tags\">\n              {/* We can use Link tag, but I've used NavLink to styling purpose only because if we have used NavLink we can't add styling on it. */}\n\n              <NavLink\n                style={{ textDecoration: \"none\" }}\n                activeClassName=\"add-link\"\n                to=\"/Add-Page\"\n              >\n                Add A Product\n              </NavLink>\n              <NavLink\n                style={{ textDecoration: \"none\" }}\n                activeClassName=\"edit-link\"\n                to=\"/Edit_Page\"\n              >\n                Edit On A Product\n              </NavLink>\n              <NavLink\n                style={{ textDecoration: \"none\" }}\n                activeClassName=\"delete-link\"\n                to=\"/Delete_Page\"\n              >\n                Delete A Product/s\n              </NavLink>\n              <NavLink\n                style={{ textDecoration: \"none\" }}\n                activeClassName=\"get-link\"\n                to=\"/Get_All\"\n              >\n                Get All Products\n              </NavLink>\n            </div>\n\n            {/* Line 176: Here To set the Home Component as Default Page. */}\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route exact path=\"/Home\" component={Home}></Route>\n            <Route\n              exact\n              path=\"/Add-Page\"\n              component={() => <AddPage test={this.AddProduct} />}\n            ></Route>\n            <Route\n              exact\n              path=\"/Edit_Page\"\n              component={() => (\n                <EditPage productProps={this.state.objectOfProducts} />\n              )}\n            ></Route>\n            <Route\n              exact\n              path=\"/Delete_Page\"\n              component={() => (\n                <DeletePage\n                  productProps={this.state.objectOfProducts}\n                  myFun={this.delete}\n                />\n              )}\n            ></Route>\n            <Route\n              exact\n              path=\"/Get_All\"\n              component={() => (\n                <GetAll\n                  productProps={this.state.objectOfProducts}\n                  myFun={this.myFave}\n                />\n              )}\n            ></Route>\n            <Route exact path=\"/API_Page\" component={APIPage}></Route>\n            <Route\n              exact\n              path=\"/Fave\"\n              component={() => (\n                <Fave\n                  faveProps={this.state.faveObjects}\n                  removeProps={this.removeOperation}\n                />\n              )}\n            ></Route>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n",["41","42"],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Home.js",[],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\Fave.js",[],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\APIPage.js",[],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\DeletePage.js",[],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\AddPage.js",["43"],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\EditPage.js",[],"C:\\Users\\a3azi\\Desktop\\SEI-14\\Projects\\Project_2_New\\Stationery-Store-Project\\src\\Components\\GetAll.js",[],{"ruleId":"44","severity":1,"message":"45","line":119,"column":15,"nodeType":"46","endLine":126,"endColumn":16},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":9,"column":10,"nodeType":"53","messageId":"54","endLine":9,"endColumn":16},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]