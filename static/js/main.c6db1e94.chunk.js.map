{"version":3,"sources":["Components/Home.js","Components/EditPage.js","Components/AddPage.js","Components/APIPage.js","Components/DeletePage.js","Components/GetAll.js","Components/Fave.js","Images/Logo_Stationery.PNG","App.js","index.js"],"names":["Home","Component","props","boxModal","pName","pQuan","console","log","setState","valueName","valueQuan","editName","editQuan","modal","document","getElementById","style","display","window","onclick","event","target","Edit_Operation","e","newProductName","newQuan","preventDefault","knowIndexName","productProps","name","indexOf","state","knowIndexQuan","quan","objectOfProducts","swal","title","icon","close","goCheck","counter","length","map","eachName","eachQuan","id","onClick","handleChangeName","bind","handleChangeQuan","this","value","className","onChange","type","placeholder","htmlFor","Add_Page","Add_Operation","test","ResetOperation","exact","path","foo","component","arrayProps","APIPage","checkSpace","VAR","$","val","includes","varJoin","split","join","showGifs","myVar","divContainer","API_1","axios","get","then","response","data","innerHTML","i","dataImage","images","original","url","img","createElement","src","appendChild","catch","err","myError","innerText","color","textAlign","valueInput","handleChange","method","justifyContent","marginTop","DeletePage","myArr","myArrQuan","deleteAll","splice","text","deleteProduct","deletedRowName","deletedRowQuan","knowIndex","margin","GetAll","isFave","faveName","faveQuan","myFun","Fave","removeFave","removeName","removeQuan","removeProps","faveProps","isFaveArrayName","isFaveArrayQuan","App","AddProduct","myFave","newFaveArrayName","faveObjects","push","newFaveArrayQuan","removeClass","addClass","removeOperation","alert","href","logo","alt","width","height","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","to","textDecoration","activeClassName","rounded","role","data-toggle","delete","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c6db1e94.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"../index.css\";\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../index.css\";\r\nimport swal from \"sweetalert\";\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      //copyArray: this.props.productProps.name,\r\n      valueName: \"\",\r\n      valueQuan: 1,\r\n      //These new edit variables to copy the previous values that in the variables above\r\n      editName: \"\",\r\n      editQuan: 1,\r\n    };\r\n\r\n    // this.GoToAPIpage = this.GoToAPIpage.bind(this);\r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n    this.handleChangeQuan = this.handleChangeQuan.bind(this);\r\n    this.Edit_Operation = this.Edit_Operation.bind(this);\r\n  }\r\n\r\n  handleChangeName(event) {\r\n    this.setState({\r\n      valueName: event.target.value,\r\n    });\r\n  }\r\n  handleChangeQuan(event) {\r\n    this.setState({\r\n      valueQuan: event.target.value,\r\n    });\r\n  }\r\n\r\n  boxModal = (pName, pQuan) => {\r\n    console.log(\"Modal For => \",pName, \" \", pQuan);\r\n\r\n    // To Hold The Previous Values For Product Name And Quantity\r\n    this.setState({\r\n      valueName: pName,\r\n      valueQuan: pQuan,\r\n      editName: pName,\r\n      editQuan: pQuan,\r\n    });\r\n\r\n    var modal = document.getElementById(\"myModal\");\r\n\r\n    // When the user clicks the button, open the modal\r\n    modal.style.display = \"block\";\r\n\r\n    // When the user clicks anywhere outside of the modal, close it\r\n    window.onclick = function (event) {\r\n      if (event.target === modal) {\r\n        modal.style.display = \"none\";\r\n      }\r\n    };\r\n\r\n    //return this.Edit_Operation(pName);\r\n  };\r\n\r\n  Edit_Operation = (e, newProductName, newQuan) => {\r\n    e.preventDefault();\r\n    var modal = document.getElementById(\"myModal\");\r\n    // let x = this.boxModal(m);\r\n   \r\n\r\n    // These Two Variables To Hold The Place Of THe Previous values.\r\n    let knowIndexName = this.props.productProps.name.indexOf(\r\n      this.state.editName\r\n    );\r\n    console.log(\"IndexName: \", knowIndexName)\r\n    let knowIndexQuan = this.props.productProps.quan.indexOf(this.state.editQuan);\r\n    console.log(\"IndexQuan: \", knowIndexQuan)\r\n\r\n    //  Then replace it with new ones\r\n    this.props.productProps.name[knowIndexName] = newProductName;\r\n    this.props.productProps.quan[knowIndexQuan] = newQuan;\r\n\r\n    // To Update the arrays and re-rendering again with new list\r\n    this.setState({\r\n      objectOfProducts: {\r\n        name: this.props.productProps.name,\r\n        quan: this.props.productProps.quan,\r\n      },\r\n    });\r\n\r\n     swal({\r\n      title: \"Edit Successfully\",\r\n      icon: \"success\",\r\n    });\r\n    // Here To Close The Box modal after edit operation done.\r\n    modal.style.display = \"none\";\r\n    // this.goCheck();\r\n  };\r\n\r\n  // When the user clicks on <span> (x), close the modal\r\n  close = () => {\r\n    console.log(\"Close\");\r\n    var modal = document.getElementById(\"myModal\");\r\n    modal.style.display = \"none\";\r\n  };\r\n\r\n  // Here To Print That Table as dynamically with a new product name and quantity\r\n  goCheck = () => {\r\n    let counter = 1;\r\n    if (this.props.productProps.name.length > 0) {\r\n      return this.props.productProps.name.map((eachName, eachQuan) => {\r\n        return (\r\n          <tr key={counter}>\r\n            <td>{counter++}</td>\r\n            <td>{eachName}</td>\r\n            <td>{this.props.productProps.quan[eachQuan]}</td>\r\n            <td\r\n              id=\"edit\"\r\n              onClick={() =>\r\n                this.boxModal(eachName, this.props.productProps.quan[eachQuan])\r\n              }\r\n            >\r\n              \r\n              Edit\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n         <span className=\"text-center\">\r\n            <h1>Your Cart</h1>\r\n         </span>\r\n\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Product Name</th>\r\n              <th>Quantity</th>\r\n              <th>Edit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.goCheck()}</tbody>\r\n        </table>\r\n        {/*  The Modal */}\r\n        <div id=\"myModal\" className=\"modal\">\r\n          {/* Modal content */}\r\n          <div className=\"modal-content\">\r\n            <span className=\"close\" onClick={this.close}>\r\n              &times;\r\n            </span>\r\n            <div>\r\n            <form>\r\n        \r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  // {...console.log(\"150: \", this.state.editName , this.state.editQuan )}\r\n                  value={this.state.valueName}\r\n                  onChange={this.handleChangeName}\r\n                  type=\"text\"\r\n                  id=\"edit-input-id\"\r\n                  placeholder=\"Type Your Product Here\"\r\n                  className=\"form-control\"\r\n                />\r\n                <label htmlFor=\"form-control-input1-id\" className=\"form-label\">\r\n                  Edit a Product\r\n                </label>\r\n              </div>\r\n              <div className=\"form-floating\">\r\n                 <input\r\n                    value={this.state.valueQuan}\r\n                    onChange={this.handleChangeQuan}\r\n                    type=\"number\"\r\n                    id=\"edit-input-id\"\r\n                    placeholder=\"How Many Pieces You Want?\"\r\n                    className=\"form-control\"\r\n                  />\r\n                <label htmlFor=\"form-control-input2-id\" className=\"form-label\">\r\n                  Quantity\r\n                </label>\r\n              </div>\r\n              \r\n              \r\n              {/* <label> Do You Want To Upload an Image?</label>{\" \"}\r\n              <input type=\"file\" id=\"user-input-upload\" />\r\n              <br />\r\n              <br /> */}\r\n              <input\r\n                id = \"inputEditBtn\"\r\n                type=\"submit\"\r\n                value=\"Edit Product\"\r\n                className=\"btn btn-success\"\r\n                onClick={(e) =>\r\n                  this.Edit_Operation(\r\n                    e,\r\n                    this.state.valueName,\r\n                    this.state.valueQuan\r\n                  )\r\n                }\r\n              />\r\n           \r\n            </form>\r\n\r\n            \r\n          </div>\r\n            {/* <form>\r\n              <div className=\"my-form-group\">\r\n                <label className=\"form-label\">Edit a Product</label>{\" \"}\r\n                <input\r\n                  // {...console.log(\"150: \", this.state.editName , this.state.editQuan )}\r\n                  value={this.state.valueName}\r\n                  onChange={this.handleChangeName}\r\n                  type=\"text\"\r\n                  id=\"user-input-pName-edit\"\r\n                  placeholder=\"Type Your Product Here\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-3\">\r\n                  <label className=\"form-label-edit\">Quantity </label>{\" \"}\r\n                  <input\r\n                    value={this.state.valueQuan}\r\n                    onChange={this.handleChangeQuan}\r\n                    type=\"number\"\r\n                    id=\"user-input-pQuan-edit\"\r\n                    placeholder=\"How Many Pieces You Want?\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n            \r\n              <input\r\n                id = \"inputBtn\"\r\n                type=\"submit\"\r\n                value=\"Edit Product\"\r\n                className=\"btn btn-success\"\r\n                onClick={(e) =>\r\n                  this.Edit_Operation(\r\n                    e,\r\n                    this.state.valueName,\r\n                    this.state.valueQuan\r\n                  )\r\n                }\r\n              />\r\n              <input id = \"inputBtn\" type=\"reset\" value=\"Reset\" className=\"btn btn-danger\" />\r\n            </form> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../index.css\";\r\nimport swal from \"sweetalert\";\r\nimport EditPage from \"./EditPage\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nexport default class Add_Page extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // Here To Store All Products That Comes From The User's Form.\r\n      //   objectOfProducts: {\r\n      //     name: [],\r\n      //     quan: [],\r\n      //   },\r\n\r\n      valueName: \"\",\r\n      valueQuan: \"\",\r\n    };\r\n\r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n    this.handleChangeQuan = this.handleChangeQuan.bind(this);\r\n  }\r\n\r\n  handleChangeName(event) {\r\n    this.setState({\r\n      valueName: event.target.value,\r\n    });\r\n  }\r\n  handleChangeQuan(event) {\r\n    this.setState({\r\n      valueQuan: event.target.value,\r\n    });\r\n  }\r\n  Add_Operation = (e) => {\r\n    // To Prevent The Refresh The Page And Fire Toggle\r\n    e.preventDefault();\r\n\r\n    console.log(\"Name \", this.state.valueName, \"Quan \", this.state.valueQuan);\r\n    this.props.test(this.state.valueName, this.state.valueQuan);\r\n  };\r\n\r\n  // This for reset the inputs\r\n\r\n  ResetOperation = (e) => {\r\n    \r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n\r\n      valueName: \"\",\r\n      valueQuan: \"\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <h1 className=\"text-center\" id=\"AddTitle\">Add A Product</h1>\r\n\r\n          \r\n\r\n          <div>\r\n            <form>\r\n        \r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"form-control-input1-id\"\r\n                  value={this.state.valueName}\r\n                  onChange={this.handleChangeName}\r\n                  placeholder=\"Type Here Your Product\"\r\n                />\r\n                <label htmlFor=\"form-control-input1-id\" className=\"form-label\">\r\n                  What Do You Want To Add?\r\n                </label>\r\n              </div>\r\n              <div className=\"form-floating\">\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  id=\"form-control-input2-id\"\r\n                  value={this.state.valueQuan}\r\n                  onChange={this.handleChangeQuan}\r\n                  placeholder=\"How Many Do you Want?\"\r\n                />\r\n                <label htmlFor=\"form-control-input2-id\" className=\"form-label\">\r\n                  Quantity\r\n                </label>\r\n              </div>\r\n              \r\n              \r\n              {/* <label> Do You Want To Upload an Image?</label>{\" \"}\r\n              <input type=\"file\" id=\"user-input-upload\" />\r\n              <br />\r\n              <br /> */}\r\n              <input\r\n                id=\"inputBtn\"\r\n                type=\"submit\"\r\n                value=\"Add Product\"\r\n                className=\"btn btn-primary\"\r\n                onClick={this.Add_Operation}\r\n              />\r\n              <input\r\n                id=\"inputBtn\"\r\n                type=\"reset\"\r\n                value=\"Reset\"\r\n                className=\"btn btn-danger\"\r\n                onClick={this.ResetOperation}\r\n              />\r\n            </form>\r\n\r\n            \r\n          </div>\r\n          <Route\r\n            exact\r\n            path=\"/Edit_Page\"\r\n            foo=\"I'm Prop\"\r\n            component={() => (\r\n              <EditPage arrayProps={this.state.objectOfProducts.name} />\r\n            )}\r\n          ></Route>\r\n          {/* <Route exact path=\"/\" component={App}></Route> */}\r\n          {/* <Route exact path=\"/Edit_Page\" component={Edit_Page}></Route> */}\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport $ from \"jquery\";\r\nexport default class APIPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      valueInput: \"\",\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.checkSpace = this.checkSpace.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    this.setState({\r\n      valueInput: event.target.value,\r\n    });\r\n  }\r\n  checkSpace = (event) => {\r\n    console.log(\"I'm In\");\r\n    event.preventDefault();\r\n    const form = $(\"#userInput\");\r\n    let VAR = form.val();\r\n\r\n    console.log(\"Before \", VAR);\r\n    if (VAR.includes(\" \")) {\r\n      let varSplit = VAR.split(\" \"); // []\r\n      let varJoin = varSplit.join(\"+\");\r\n      console.log(\"Result \", varJoin);\r\n      VAR = varJoin;\r\n\r\n      //return varJoin;\r\n      //postData(varJoin);\r\n    }\r\n\r\n    return this.showGifs(VAR);\r\n    //\r\n    //postData();\r\n  };\r\n\r\n  showGifs = (myVar) => {\r\n    const divContainer = document.getElementById(\"container\");\r\n    console.log(\"I'm In ShowGifs Method \", myVar);\r\n    const API_1 = `https://api.giphy.com/v1/gifs/search?q=${myVar}&api_key=dc6zaTOxFJmzC`;\r\n    axios\r\n      .get(API_1)\r\n      .then((response) => {\r\n        const data = response.data.data.length;\r\n        console.log(\"Length \", data);\r\n        console.log(\"RESPONSE: \", response);\r\n        console.log(\"DATA: \", response.data);\r\n\r\n        //document.removeChild(\"img\");\r\n\r\n        divContainer.innerHTML = \"\";\r\n\r\n        //    let one =  document.querySelector(\"img\").\r\n        let i = 0;\r\n        for (i; i < data; i++) {\r\n          const dataImage = response.data.data[i].images.original.url;\r\n\r\n          const img = document.createElement(\"img\");\r\n\r\n          img.src = dataImage;\r\n\r\n          divContainer.appendChild(img);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ERR: \", err);\r\n        divContainer.innerHTML = \"\";\r\n        const myError = document.createElement(\"h3\");\r\n\r\n        myError.innerText = \"Invalid Input, Please Type Another Thing\";\r\n        myError.style.color = \"red\";\r\n        myError.style.textAlign = \"center\";\r\n\r\n        divContainer.appendChild(myError);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    // const btn = $(\"#Btn\");\r\n    // btn.on(\"click\", checkSpace);\r\n\r\n    // const postData = (myVar) => {\r\n    //   //$ {};\r\n    //   // http://api.giphy.com/v1/gifs/search?q=funny+cat&api_key=dc6zaTOxFJmzC\r\n\r\n    return (\r\n      <div>\r\n        <p className=\"text-center\">\r\n          <h2>API</h2>\r\n          <h3>Type Anything To See Images As Gif For That.</h3>\r\n        </p>\r\n\r\n        <form id=\"myFor\" method=\"GET\">\r\n          {/* <input\r\n            id=\"Input\"\r\n            type=\"text\"\r\n            placeholder=\"Type Anything To See Images As Gif For That.\"\r\n            onChange={this.handleChange}\r\n            value={this.state.valueInput}\r\n          />\r\n\r\n          <button id=\"Btn\" onClick={(e) => this.checkSpace(e)}>\r\n            Submit\r\n          </button> */}\r\n          <div style={{display: \"flex\", justifyContent: \"center\", marginTop: \"6vh\"}}>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"userInput\"\r\n                onChange={this.handleChange}\r\n                value={this.state.valueInput}\r\n                placeholder=\"Type Anything\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <button onClick={(e) => this.checkSpace(e)} type=\"submit\" id = \"mybutton\" className=\"btn btn-primary mb-3\">\r\n                Show!\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {/* <input id=\"Sub\" type=\"submit\" value=\"Submit\" /> */}\r\n        </form>\r\n        <br />\r\n\r\n        <div id=\"container\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../index.css\";\r\nimport swal from \"sweetalert\";\r\nexport default class DeletePage extends Component {\r\n  myArr = this.props.productProps.name;\r\n  myArrQuan = this.props.productProps.quan;\r\n\r\n  // This Method For Deleting All The Products When the user click the button.\r\n  deleteAll = () => {\r\n    console.log(\"Delete All\");\r\n\r\n    // Here Is the actuall deleting operation, I've used the splice method to delete the entire array.\r\n    this.myArr.splice(0, this.myArr.length);\r\n    this.myArrQuan.splice(0, this.myArrQuan.length);\r\n\r\n    // To Update the arrays and re-rendering again with new list\r\n    this.setState({\r\n      objectOfProducts: {\r\n        name: this.myArr,\r\n        quan: this.myArrQuan,\r\n      },\r\n    });\r\n    swal({\r\n\r\n      title: \"Deleted All\",\r\n      text: \"Deleted Successfully\",\r\n      icon: \"success\"\r\n    })\r\n  };\r\n\r\n  // This method for delete a specific row in the cart\r\n  deleteProduct = (deletedRowName, deletedRowQuan) => {\r\n    // console.log(this.myArr);\r\n    console.log(deletedRowName, deletedRowQuan);\r\n\r\n    // // Here To Check If that product exist in the array or not. If so we want to the where is the place of that product by using indexOf() and then use splice method to remove it.\r\n    // if (this.myArr.includes(deletedRow)) {\r\n    //   let knowIndex = this.myArr.indexOf(deletedRow);\r\n    //   this.myArr.splice(knowIndex, 1);\r\n    // }\r\n\r\n    // alert(\"Deleted Successfully \");\r\n    console.log(\"Delete From The Delete File \", deletedRowName, deletedRowQuan);\r\n    if (this.myArr.includes(deletedRowName)) {\r\n      let knowIndex = this.myArr.indexOf(deletedRowName);\r\n      this.myArr.splice(knowIndex, 1);\r\n    }\r\n    if (this.myArrQuan.includes(deletedRowQuan)) {\r\n      let knowIndex = this.myArrQuan.indexOf(deletedRowQuan);\r\n      this.myArrQuan.splice(knowIndex, 1);\r\n    }\r\n\r\n    // To Update the arrays and re-rendering again with new list\r\n    this.setState({\r\n      objectOfProducts: {\r\n        name: this.myArr,\r\n        quan: this.myArrQuan,\r\n      },\r\n    });\r\n\r\n      swal({\r\n      title: \"Deleted Successfully\",\r\n      icon: \"success\"\r\n    \r\n    });\r\n    \r\n  };\r\n\r\n  // Here To Print That Table as dynamically with a new product name and quantity\r\n  goCheck = () => {\r\n    let counter = 1;\r\n    console.log(this.myArr);\r\n    if (this.myArr.length > 0) {\r\n      return this.myArr.map((eachName, eachQuan) => {\r\n        return (\r\n          <tr key={counter}>\r\n            <td>{counter++}</td>\r\n            <td>{eachName}</td>\r\n            <td>{this.props.productProps.quan[eachQuan]}</td>\r\n            <td\r\n              id=\"edit\"\r\n              onClick={() =>\r\n                this.deleteProduct(\r\n                  eachName,\r\n                  this.props.productProps.quan[eachQuan]\r\n                )\r\n              }\r\n            >\r\n              Delete\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <p className=\"text-center\">\r\n            <h1>Your Cart</h1>\r\n          </p>\r\n\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Product Name</th>\r\n                <th>Quantity</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.goCheck()}</tbody>\r\n          </table>\r\n\r\n          \r\n          <button\r\n            style={{margin: \"auto\", display: \"block\"}}\r\n            id=\"deleteBtn\"\r\n            className=\"btn btn-danger\"\r\n            onClick={this.deleteAll}\r\n          >\r\n              Clear All Products\r\n          </button>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../index.css\";\r\nexport default class GetAll extends Component {\r\n\r\n  constructor(props) {\r\n    \r\n    super(props);\r\n\r\n    this.isFave = this.isFave.bind(this);\r\n  }\r\n\r\n  isFave = (faveName , faveQuan) => {\r\n   // e.preventDefault();\r\n    console.log(\"Fave Method \", faveName, faveQuan);\r\n    this.props.myFun(faveName, faveQuan);\r\n  }\r\n  goCheck = () => {\r\n    let counter = 1;\r\n    if (this.props.productProps.name.length > 0) {\r\n      return this.props.productProps.name.map((eachName, eachQuan) => {\r\n        return (\r\n          <tr key={counter}>\r\n            <td>{counter++}</td>\r\n            <td>{eachName}</td>\r\n            <td>{this.props.productProps.quan[eachQuan]}</td>\r\n            <td id=\"edit\" onClick = {() => this.isFave(eachName, this.props.productProps.quan[eachQuan])}>Add To Favorite List</td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <p className=\"text-center\">\r\n          <h1>Your Products</h1>\r\n        </p>\r\n\r\n        <table className = \"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Product Name</th>\r\n              <th>Quantity</th>\r\n              <th>Favorite</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.goCheck()}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Fave extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.removeFave = this.removeFave.bind(this);\r\n  }\r\n  removeFave = (removeName, removeQuan) => {\r\n    console.log(\"RemoveFave = \", removeName, \" \", removeQuan);\r\n\r\n    this.props.removeProps(removeName, removeQuan);\r\n\r\n    //  if (this.props.faveProps.isFaveArrayName.includes(removeName)) {\r\n    //   let knowIndex = this.props.faveProps.isFaveArrayName.indexOf(removeName);\r\n    //   this.props.faveProps.isFaveArrayName.splice(knowIndex, 1);\r\n    // }\r\n    // if (this.props.faveProps.isFaveArrayQuan.includes(removeQuan)) {\r\n    //   let knowIndex = this.props.faveProps.isFaveArrayQuan.indexOf(removeQuan);\r\n    //   this.props.faveProps.isFaveArrayQuan.splice(knowIndex, 1);\r\n    // }\r\n\r\n    // // To Update the arrays and re-rendering again with new list\r\n    // this.setState({\r\n\r\n    //   faveProps: {\r\n    //     isFaveArrayName: this.props.faveProps.isFaveArrayName,\r\n    //     isFaveArrayQuan: this.props.faveProps.isFaveArrayQuan,\r\n    //   }\r\n    // })\r\n\r\n    // alert(\"Removed Successfully \");\r\n  };\r\n\r\n  goCheck = () => {\r\n    let counter = 1;\r\n    if (this.props.faveProps.isFaveArrayName.length > 0) {\r\n      return this.props.faveProps.isFaveArrayName.map((eachName, eachQuan) => {\r\n        return (\r\n          <tr key={counter}>\r\n            <td>{counter++}</td>\r\n            <td>{eachName}</td>\r\n            <td>{this.props.faveProps.isFaveArrayQuan[eachQuan]}</td>\r\n            <td\r\n              id=\"remove-link\"\r\n              onClick={() =>\r\n                this.removeFave(\r\n                  eachName,\r\n                  this.props.faveProps.isFaveArrayQuan[eachQuan]\r\n                )\r\n              }\r\n            >\r\n              Remove From Favorite List\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <p className=\"text-center\">\r\n          <h1 style={{ color: \"red\" }}>Your Favorite Products</h1>\r\n        </p>\r\n\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Product Name</th>\r\n              <th>Quantity</th>\r\n              <th>Remove</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.goCheck()}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Logo_Stationery.3ea0f6ed.PNG\";","import React, { Component } from \"react\";\nimport Home from \"./Components/Home\";\nimport EditPage from \"./Components/EditPage\";\nimport AddPage from \"./Components/AddPage\";\nimport \"./App.css\";\nimport APIPage from \"./Components/APIPage\";\nimport DeletePage from \"./Components/DeletePage\";\nimport GetAll from \"./Components/GetAll\";\nimport Fave from \"./Components/Fave\";\nimport logo from \"./Images/Logo_Stationery.PNG\";\nimport swal from \"sweetalert\";\nimport $ from \"jquery\";\n// This Import For Brings Icons From react-icons/ai\nimport { RiHeartAddLine } from \"react-icons/ri\";\n\n// These Imports For Router\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      objectOfProducts: {\n        name: [],\n        quan: [],\n      },\n\n      //To store the favorite products name and quantity.\n      faveObjects: {\n        isFaveArrayName: [],\n        isFaveArrayQuan: [],\n      },\n    };\n\n    this.AddProduct = this.AddProduct.bind(this);\n  }\n  // let newName = this.state.objectOfProducts.name\n  // newName.push(pName)\n  // this.setState({\n  //     name: newName\n  // })\n\n  AddProduct = (pName, quan) => {\n    // This Function for add a product and save it in the array.\n    console.log(pName, quan);\n\n    this.setState({\n      objectOfProducts: {\n        name: [...this.state.objectOfProducts.name, pName],\n        quan: [...this.state.objectOfProducts.quan, quan],\n      },\n    });\n    swal({\n      title: \"Added Successfully\",\n      icon: \"success\",\n    });\n    console.log(\"Added Success\");\n  };\n\n  myFave = (faveName, faveQuan) => {\n    // This Function For Add a marked product to the favorite array.\n\n    console.log(faveName, faveQuan);\n    let newFaveArrayName = this.state.faveObjects.isFaveArrayName;\n    newFaveArrayName.push(faveName);\n    let newFaveArrayQuan = this.state.faveObjects.isFaveArrayQuan;\n    newFaveArrayQuan.push(faveQuan);\n    this.setState({\n      faveObjects: {\n        isFaveArrayName: newFaveArrayName,\n        isFaveArrayQuan: newFaveArrayQuan,\n      },\n    });\n    console.log(this.state.faveObjects.isFaveArrayName);\n    console.log(this.state.faveObjects.isFaveArrayQuan);\n\n    $(\"span\").removeClass(\"newstyle\");\n    \n\n    \n\n    swal({\n      title: \"Added Successfully\",\n      icon: \"success\"\n    \n    });\n    $(\"span\").addClass(\"newstyle\");\n  };\n\n  removeOperation = (removeName, removeQuan) => {\n    console.log(\"RemoveFave From APP = \", removeName, \" \", removeQuan);\n\n    if (this.state.faveObjects.isFaveArrayName.includes(removeName)) {\n      let knowIndex = this.state.faveObjects.isFaveArrayName.indexOf(\n        removeName\n      );\n      this.state.faveObjects.isFaveArrayName.splice(knowIndex, 1);\n    }\n    if (this.state.faveObjects.isFaveArrayQuan.includes(removeQuan)) {\n      let knowIndex = this.state.faveObjects.isFaveArrayQuan.indexOf(\n        removeQuan\n      );\n      this.state.faveObjects.isFaveArrayQuan.splice(knowIndex, 1);\n    }\n\n    // To Update the arrays and re-rendering again with new list\n    this.setState({\n      faveProps: {\n        isFaveArrayName: this.state.faveObjects.isFaveArrayName,\n        isFaveArrayQuan: this.state.faveObjects.isFaveArrayQuan,\n      },\n    });\n\n    alert(\"Removed Successfully \");\n  };\n\n  render() {\n    console.log(\"New Array => \", this.state.objectOfProducts);\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n              <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"/\">\n                  <img\n                    src={logo}\n                    alt=\"\"\n                    width=\"30\"\n                    height=\"24\"\n                    className=\"d-inline-block align-top\"\n                  ></img>\n                </a>\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  data-bs-toggle=\"collapse\"\n                  data-bs-target=\"#navbarSupportedContent\"\n                  aria-controls=\"navbarSupportedContent\"\n                  aria-expanded=\"false\"\n                  aria-label=\"Toggle navigation\"\n                >\n                  <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div\n                  className=\"collapse navbar-collapse\"\n                  id=\"navbarSupportedContent\"\n                >\n                  <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                    <li className=\"nav-item\">\n                      <NavLink\n                        to=\"/Fave\"\n                        style={{ textDecoration: \"none\" }}\n                        activeClassName=\"fave-link\"\n                      >\n                        <h2\n                          id=\"fave-icon\"\n                          style={{ width: \"30\", height: \"24\" }}\n                          className=\"d-inline-block align-top\"\n                        >\n                          <RiHeartAddLine />\n                          <span className=\"counter-style\">\n                            {this.state.faveObjects.isFaveArrayName.length}\n                          </span>\n                        </h2>\n                      </NavLink>\n                    </li>\n\n                    <p className=\"title\">Stationery Store In Your Hands</p>\n                  </ul>\n                  <NavLink\n                    to=\"/Stationery-Store-Project/API_Page\"\n                    style={{ textDecoration: \"none\" }}\n                    activeClassName=\"api-link\"\n                  >\n                    <h4 id=\"API-tag\">Something Fun</h4>\n                  </NavLink>\n                </div>\n              </div>\n            </nav>\n            <p className=\"text-center\" style={{ margin: \"4vh 0\" }}>\n              <img\n                src={logo}\n                className=\"img-rounded\"\n                alt=\"MyImage\"\n                width=\"15%\"\n                height=\"15%\"\n                rounded = \"true\"\n              ></img>\n            </p>\n            <h3 className=\"text-center\" style={{ margin: \"10vh 0\" }}>\n              {\" \"}\n              What Do You Want?\n            </h3>\n            <ul className=\"nav justify-content-center nav-pills\">\n              <li className=\"nav-item\">\n                <NavLink\n                  className=\"nav-link\"\n                  role=\"tab\"\n                  style={{ textDecoration: \"none\" }}\n                  to=\"/Add-Page\"\n                >\n                  Add A Product\n                </NavLink>\n                {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                  Active\n                </a> */}\n              </li>\n              <li className=\"nav-item\">\n                <NavLink\n                  style={{ textDecoration: \"none\" }}\n                  activeClassName=\"edit-link\"\n                  className=\"nav-link\"\n                  data-toggle=\"pill\"\n                  role=\"tab\"\n                  to=\"/Edit_Page\"\n                >\n                  Edit On A Product\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink\n                  style={{ textDecoration: \"none\" }}\n                  activeClassName=\"delete-link\"\n                  className=\"nav-link\"\n                  data-toggle=\"pill\"\n                  to=\"/Delete_Page\"\n                >\n                  Delete A Product/s\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink\n                  style={{ textDecoration: \"none\" }}\n                  activeClassName=\"get-link\"\n                  className=\"nav-link\"\n                  data-toggle=\"pill\"\n                  to=\"/Get_All\"\n                >\n                  Get All Products\n                </NavLink>\n              </li>\n            </ul>{\" \"}\n            {/* <div className=\"link-tags\"> */}\n            {/* We can use Link tag, but I've used NavLink to styling purpose only because if we have used NavLink we can't add styling on it. */}\n            {/* </div> */}\n            {/* Line 234: Here To set the Home Component as Default Page. */}\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route exact path=\"/Home\" component={Home}></Route>\n            <Route\n              exact\n              path=\"/Add-Page\"\n              component={() => <AddPage test={this.AddProduct} />}\n            ></Route>\n            <Route\n              exact\n              path=\"/Edit_Page\"\n              component={() => (\n                <EditPage productProps={this.state.objectOfProducts} />\n              )}\n            ></Route>\n            <Route\n              exact\n              path=\"/Delete_Page\"\n              component={() => (\n                <DeletePage\n                  productProps={this.state.objectOfProducts}\n                  myFun={this.delete}\n                />\n              )}\n            ></Route>\n            <Route\n              exact\n              path=\"/Get_All\"\n              component={() => (\n                <GetAll\n                  productProps={this.state.objectOfProducts}\n                  myFun={this.myFave}\n                />\n              )}\n            ></Route>\n            <Route\n              exact\n              path=\"/Stationery-Store-Project/API_Page\"\n              component={APIPage}\n            ></Route>\n            <Route\n              exact\n              path=\"/Fave\"\n              component={() => (\n                <Fave\n                  faveProps={this.state.faveObjects}\n                  removeProps={this.removeOperation}\n                />\n              )}\n            ></Route>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}