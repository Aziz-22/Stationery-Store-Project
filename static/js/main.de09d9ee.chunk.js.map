{"version":3,"sources":["Components/Home.js","Components/EditPage.js","Components/AddPage.js","Components/APIPage.js","Components/DeletePage.js","Components/GetAll.js","Components/Fave.js","Images/Logo_Stationery.PNG","App.js","index.js"],"names":["Home","Component","props","boxModal","pName","pQuan","console","log","setState","valueName","valueQuan","editName","editQuan","modal","document","getElementById","style","display","window","onclick","event","target","Edit_Operation","e","newProductName","newQuan","preventDefault","swal","title","text","icon","buttons","dangerMode","then","willDelete","knowIndexName","productProps","name","indexOf","state","knowIndexQuan","quan","objectOfProducts","close","goCheck","counter","length","map","eachName","eachQuan","className","src","images","alt","id","onClick","handleChangeName","bind","handleChangeQuan","this","value","onChange","type","placeholder","htmlFor","Add_Page","Add_Operation","test","ResetOperation","handleChangeImage","files","forEach","file","URL","createObjectURL","querySelector","fileNameAndSize","size","toFixed","textContent","verticalAlign","exact","path","foo","component","arrayProps","APIPage","checkSpace","VAR","$","val","includes","varJoin","split","join","showGifs","myVar","divContainer","API_1","axios","get","response","data","innerHTML","i","dataImage","original","url","img","createElement","classList","add","appendChild","catch","err","myError","innerText","color","textAlign","valueInput","handleChange","method","justifyContent","marginTop","DeletePage","myArr","myArrQuan","myArrImages","faveName","isfave","isFaveArrayName","faveQuan","isFaveArrayQuan","faveImage","isFaveArrayImage","deleteAll","deleteAllFun","deleteProduct","deletedRowName","deletedRowQuan","deletedRowImage","dOperation","margin","GetAll","isFave","myFun","Fave","removeFave","removeName","removeQuan","removeProps","faveProps","App","AddProduct","image","concat","deleteFun","faveObjects","knowIndex","splice","myFave","newFaveArrayName","push","newFaveArrayQuan","removeClass","addClass","removeOperation","href","logo","width","height","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","to","textDecoration","activeClassName","rounded","role","data-toggle","delete","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.de09d9ee.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport \"../index.css\";\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../index.css\";\r\nimport swal from \"sweetalert\";\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      //copyArray: this.props.productProps.name,\r\n      valueName: \"\",\r\n      valueQuan: 1,\r\n      images: null,\r\n      //These new edit variables to copy the previous values that in the variables above\r\n      editName: \"\",\r\n      editQuan: 1,\r\n    };\r\n\r\n    // this.GoToAPIpage = this.GoToAPIpage.bind(this);\r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n    this.handleChangeQuan = this.handleChangeQuan.bind(this);\r\n    this.Edit_Operation = this.Edit_Operation.bind(this);\r\n  }\r\n\r\n  \r\n  handleChangeName(event) {\r\n    this.setState({\r\n      valueName: event.target.value,\r\n    });\r\n  }\r\n  handleChangeQuan(event) {\r\n    this.setState({\r\n      valueQuan: event.target.value,\r\n    });\r\n  }\r\n\r\n  boxModal = (pName, pQuan) => {\r\n    console.log(\"Modal For => \", pName, \" \", pQuan);\r\n\r\n    // To Hold The Previous Values For Product Name And Quantity\r\n    this.setState({\r\n      valueName: pName,\r\n      valueQuan: pQuan,\r\n      editName: pName,\r\n      editQuan: pQuan,\r\n    });\r\n\r\n    var modal = document.getElementById(\"myModal\");\r\n\r\n    // When the user clicks the button, open the modal\r\n    modal.style.display = \"block\";\r\n\r\n    // When the user clicks anywhere outside of the modal, close it\r\n    window.onclick = function (event) {\r\n      if (event.target === modal) {\r\n        modal.style.display = \"none\";\r\n      }\r\n    };\r\n\r\n    //return this.Edit_Operation(pName);\r\n  };\r\n\r\n  Edit_Operation = (e, newProductName, newQuan) => {\r\n    e.preventDefault();\r\n    var modal = document.getElementById(\"myModal\");\r\n    // let x = this.boxModal(m);\r\n\r\n    swal({\r\n      title: \"Are You Sure?\",\r\n      text: \"Are you sure you want to edit on this products?\",\r\n      icon: \"warning\",\r\n      buttons: true, // This button to tell the Sweetalert to add a cancel button with confirmation button\r\n      dangerMode: true, // The focus will automatically be set on the cancel button instead of the confirm button\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        swal({\r\n          title: \"Edit Successfully\",\r\n          icon: \"success\",\r\n        });\r\n        // These Two Variables To Hold The Place Of THe Previous values.\r\n        let knowIndexName = this.props.productProps.name.indexOf(\r\n          this.state.editName\r\n        );\r\n        console.log(\"IndexName: \", knowIndexName);\r\n        let knowIndexQuan = this.props.productProps.quan.indexOf(\r\n          this.state.editQuan\r\n        );\r\n        console.log(\"IndexQuan: \", knowIndexQuan);\r\n\r\n        //  Then replace it with new ones\r\n        this.props.productProps.name[knowIndexName] = newProductName;\r\n        this.props.productProps.quan[knowIndexQuan] = newQuan;\r\n\r\n        // To Update the arrays and re-rendering again with new list\r\n        this.setState({\r\n          objectOfProducts: {\r\n            name: this.props.productProps.name,\r\n            quan: this.props.productProps.quan,\r\n          },\r\n        });\r\n      }\r\n    });\r\n\r\n    // Here To Close The Box modal after edit operation done.\r\n    modal.style.display = \"none\";\r\n    // this.goCheck();\r\n  };\r\n\r\n  // When the user clicks on <span> (x), close the modal\r\n  close = () => {\r\n    console.log(\"Close\");\r\n    var modal = document.getElementById(\"myModal\");\r\n    modal.style.display = \"none\";\r\n  };\r\n\r\n  // Here To Print That Table as dynamically with a new product name and quantity\r\n  goCheck = () => {\r\n    let counter = 1;\r\n    if (this.props.productProps.name.length > 0) {\r\n      return this.props.productProps.name.map((eachName, eachQuan) => {\r\n        return (\r\n          <tr key={counter}>\r\n            <td>{counter++}</td>\r\n            <td>{eachName}</td>\r\n            <td>{this.props.productProps.quan[eachQuan]}</td>\r\n            <td><img className=\"img-thumbnail\" src={this.props.productProps.images[eachQuan]} alt=\"Empty\"></img></td>\r\n            <td\r\n              id=\"edit\"\r\n              onClick={() =>\r\n                this.boxModal(eachName, this.props.productProps.quan[eachQuan])\r\n              }\r\n            >\r\n              Edit\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div className=\"container\">\r\n        <span className=\"text-center\">\r\n          <h1>Your Cart</h1>\r\n        </span>\r\n\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Product Name</th>\r\n              <th>Quantity</th>\r\n              <th>Image</th>\r\n              <th>Edit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.goCheck()}</tbody>\r\n        </table>\r\n        {/*  The Modal */}\r\n        <div id=\"myModal\" className=\"modal\">\r\n          {/* Modal content */}\r\n          <div className=\"modal-content\">\r\n            <span className=\"close\" onClick={this.close}>\r\n              &times;\r\n            </span>\r\n            <div>\r\n              <form>\r\n                <div className=\"form-floating mb-3\">\r\n                  <input\r\n                    // {...console.log(\"150: \", this.state.editName , this.state.editQuan )}\r\n                    value={this.state.valueName}\r\n                    onChange={this.handleChangeName}\r\n                    type=\"text\"\r\n                    id=\"edit-input-id\"\r\n                    placeholder=\"Type Your Product Here\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  <label\r\n                    htmlFor=\"form-control-input1-id\"\r\n                    className=\"form-label\"\r\n                  >\r\n                    Edit a Product\r\n                  </label>\r\n                </div>\r\n                <div className=\"form-floating\">\r\n                  <input\r\n                    value={this.state.valueQuan}\r\n                    onChange={this.handleChangeQuan}\r\n                    type=\"number\"\r\n                    id=\"edit-input-id\"\r\n                    placeholder=\"How Many Pieces You Want?\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  <label\r\n                    htmlFor=\"form-control-input2-id\"\r\n                    className=\"form-label\"\r\n                  >\r\n                    Quantity\r\n                  </label>\r\n                </div>\r\n\r\n                {/* <label> Do You Want To Upload an Image?</label>{\" \"}\r\n              <input type=\"file\" id=\"user-input-upload\" />\r\n              <br />\r\n              <br /> */}\r\n                <input\r\n                  id=\"inputEditBtn\"\r\n                  type=\"submit\"\r\n                  value=\"Edit Product\"\r\n                  className=\"btn btn-success\"\r\n                  onClick={(e) =>\r\n                    this.Edit_Operation(\r\n                      e,\r\n                      this.state.valueName,\r\n                      this.state.valueQuan\r\n                    )\r\n                  }\r\n                />\r\n              </form>\r\n            </div>\r\n            {/* <form>\r\n              <div className=\"my-form-group\">\r\n                <label className=\"form-label\">Edit a Product</label>{\" \"}\r\n                <input\r\n                  // {...console.log(\"150: \", this.state.editName , this.state.editQuan )}\r\n                  value={this.state.valueName}\r\n                  onChange={this.handleChangeName}\r\n                  type=\"text\"\r\n                  id=\"user-input-pName-edit\"\r\n                  placeholder=\"Type Your Product Here\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <br />\r\n              <br />\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-3\">\r\n                  <label className=\"form-label-edit\">Quantity </label>{\" \"}\r\n                  <input\r\n                    value={this.state.valueQuan}\r\n                    onChange={this.handleChangeQuan}\r\n                    type=\"number\"\r\n                    id=\"user-input-pQuan-edit\"\r\n                    placeholder=\"How Many Pieces You Want?\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <br />\r\n            \r\n              <input\r\n                id = \"inputBtn\"\r\n                type=\"submit\"\r\n                value=\"Edit Product\"\r\n                className=\"btn btn-success\"\r\n                onClick={(e) =>\r\n                  this.Edit_Operation(\r\n                    e,\r\n                    this.state.valueName,\r\n                    this.state.valueQuan\r\n                  )\r\n                }\r\n              />\r\n              <input id = \"inputBtn\" type=\"reset\" value=\"Reset\" className=\"btn btn-danger\" />\r\n            </form> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../index.css\";\r\nimport EditPage from \"./EditPage\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { FaUpload } from \"react-icons/fa\";\r\nimport $ from \"jquery\";\r\n\r\nexport default class Add_Page extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // Here To Store All Products That Comes From The User's Form.\r\n      //   objectOfProducts: {\r\n      //     name: [],\r\n      //     quan: [],\r\n      //   },\r\n\r\n      valueName: \"\",\r\n      valueQuan: \"\",\r\n      images: \"\",\r\n    };\r\n\r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n    this.handleChangeQuan = this.handleChangeQuan.bind(this);\r\n    this.handleChangeImage = this.handleChangeImage.bind(this);\r\n    \r\n    // this.imageHandle = this.imageHandle.bind(this);\r\n  }\r\n\r\n  // imageHandle = (event) =>{\r\n\r\n  //   if (event.target.files && event.target.files[0]) {\r\n\r\n  //     let img = event.target.files[0];\r\n  //     this.setState({\r\n\r\n  //       images: URL.createObjectURL(img)\r\n  //     });\r\n  //   }\r\n  // }\r\n  handleChangeName(event) {\r\n    this.setState({\r\n      valueName: event.target.value,\r\n    });\r\n  }\r\n  handleChangeQuan(event) {\r\n    this.setState({\r\n      valueQuan: event.target.value,\r\n    });\r\n  }\r\n  handleChangeImage(event) {\r\n    \r\n\r\n    [...event.target.files].forEach((file) => {\r\n      console.log(\"file >>> \", file.name);\r\n\r\n\r\n      this.setState({\r\n        // images: URL.createObjectURL(file),\r\n        images: [...this.state.images, URL.createObjectURL(file)],\r\n      });\r\n\r\n    });\r\n\r\n    var file = document.querySelector(\"#user-input-upload\");\r\n\r\n    // Get the selected file\r\n    [file] = event.target.files;\r\n    // Get the file name and size\r\n    const fileName = file.name;\r\n    // Convert size in bytes to kilo bytes\r\n    const size = (file.size / 1000).toFixed(2);\r\n  \r\n    // Set the text content\r\n    const fileNameAndSize = fileName + \" - \" + size + \"KB\";\r\n    document.querySelector(\".file-name\").textContent = fileNameAndSize;\r\n\r\n    // setPictures(tempArr);\r\n  }\r\n  Add_Operation = (e) => {\r\n    // To Prevent The Refresh The Page And Fire Toggle\r\n    e.preventDefault();\r\n\r\n    console.log(\r\n      \"Name \",\r\n      this.state.valueName,\r\n      \"Quan \",\r\n      this.state.valueQuan,\r\n      \"IMAGE: \",\r\n      this.state.images\r\n    );\r\n    this.props.test(\r\n      this.state.valueName,\r\n      this.state.valueQuan,\r\n      this.state.images\r\n    );\r\n  };\r\n\r\n  // This for reset the inputs\r\n\r\n  ResetOperation = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      valueName: \"\",\r\n      valueQuan: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <h1 className=\"text-center\" id=\"AddTitle\">\r\n            Add a Product\r\n          </h1>\r\n\r\n          <div>\r\n            <form>\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"form-control-input1-id\"\r\n                  value={this.state.valueName}\r\n                  onChange={this.handleChangeName}\r\n                  placeholder=\"Type Here Your Product\"\r\n                />\r\n                <label htmlFor=\"form-control-input1-id\" className=\"form-label\">\r\n                  What do You Want to Add?\r\n                </label>\r\n              </div>\r\n              <div className=\"form-floating\">\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  id=\"form-control-input2-id\"\r\n                  value={this.state.valueQuan}\r\n                  onChange={this.handleChangeQuan}\r\n                  placeholder=\"How Many Do you Want?\"\r\n                />\r\n                <label htmlFor=\"form-control-input2-id\" className=\"form-label\">\r\n                  Quantity\r\n                </label>\r\n              </div>\r\n              <br></br>\r\n              <label htmlFor=\"user-input-upload\" className=\"form-label-upload\">\r\n                <span style={{ verticalAlign: \"text-bottom\" }}>\r\n                  <FaUpload />\r\n                </span>{\" \"}\r\n                Do You Want To Upload an Image?\r\n                \r\n              </label>{\" \"}\r\n              <p className=\"file-name\"></p>\r\n              <input\r\n                className=\"inputFile\"\r\n                type=\"file\"\r\n                id=\"user-input-upload\"\r\n                onChange={this.handleChangeImage}\r\n              />\r\n              <input\r\n                id=\"inputBtn\"\r\n                type=\"submit\"\r\n                value=\"Add Product\"\r\n                className=\"btn btn-primary\"\r\n                onClick={this.Add_Operation}\r\n              />\r\n              <input\r\n                id=\"inputBtn\"\r\n                type=\"reset\"\r\n                value=\"Reset\"\r\n                className=\"btn btn-danger\"\r\n                onClick={this.ResetOperation}\r\n              />\r\n            </form>\r\n          </div>\r\n          <Route\r\n            exact\r\n            path=\"/Edit_Page\"\r\n            foo=\"I'm Prop\"\r\n            component={() => (\r\n              <EditPage arrayProps={this.state.objectOfProducts.name} />\r\n            )}\r\n          ></Route>\r\n          {/* <Route exact path=\"/\" component={App}></Route> */}\r\n          {/* <Route exact path=\"/Edit_Page\" component={Edit_Page}></Route> */}\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport $ from \"jquery\";\r\nexport default class APIPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      valueInput: \"\",\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.checkSpace = this.checkSpace.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    this.setState({\r\n      valueInput: event.target.value,\r\n    });\r\n  }\r\n  checkSpace = (event) => {\r\n    console.log(\"I'm In\");\r\n    event.preventDefault();\r\n    const form = $(\"#userInput\");\r\n    let VAR = form.val();\r\n\r\n    console.log(\"Before \", VAR);\r\n    if (VAR.includes(\" \")) {\r\n      let varSplit = VAR.split(\" \"); // []\r\n      let varJoin = varSplit.join(\"+\");\r\n      console.log(\"Result \", varJoin);\r\n      VAR = varJoin;\r\n\r\n      //return varJoin;\r\n      //postData(varJoin);\r\n    }\r\n\r\n    return this.showGifs(VAR);\r\n    //\r\n    //postData();\r\n  };\r\n\r\n  showGifs = (myVar) => {\r\n    const divContainer = document.getElementById(\"container\");\r\n    console.log(\"I'm In ShowGifs Method \", myVar);\r\n    const API_1 = `https://api.giphy.com/v1/gifs/search?q=${myVar}&api_key=dc6zaTOxFJmzC`;\r\n    axios\r\n      .get(API_1)\r\n      .then((response) => {\r\n        const data = response.data.data.length;\r\n        console.log(\"Length \", data);\r\n        console.log(\"RESPONSE: \", response);\r\n        console.log(\"DATA: \", response.data);\r\n\r\n        //document.removeChild(\"img\");\r\n\r\n        divContainer.innerHTML = \"\";\r\n\r\n        //    let one =  document.querySelector(\"img\").\r\n        let i = 0;\r\n        for (i; i < data; i++) {\r\n          const dataImage = response.data.data[i].images.original.url;\r\n\r\n          const img = document.createElement(\"img\");\r\n\r\n          img.classList.add(\"ownImage\");\r\n          img.src = dataImage;\r\n          \r\n\r\n          divContainer.appendChild(img);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ERR: \", err);\r\n        divContainer.innerHTML = \"\";\r\n        const myError = document.createElement(\"h3\");\r\n\r\n        myError.innerText = \"Invalid Input, Please Type Another Thing\";\r\n        myError.style.color = \"red\";\r\n        myError.style.textAlign = \"center\";\r\n\r\n        divContainer.appendChild(myError);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    // const btn = $(\"#Btn\");\r\n    // btn.on(\"click\", checkSpace);\r\n\r\n    // const postData = (myVar) => {\r\n    //   //$ {};\r\n    //   // http://api.giphy.com/v1/gifs/search?q=funny+cat&api_key=dc6zaTOxFJmzC\r\n\r\n    return (\r\n      <div>\r\n        <span className=\"text-center\">\r\n          <h2>API</h2>\r\n          <h3>Type Anything To See Images As Gif For That.</h3>\r\n        </span>\r\n\r\n        <form id=\"myFor\" method=\"GET\">\r\n          {/* <input\r\n            id=\"Input\"\r\n            type=\"text\"\r\n            placeholder=\"Type Anything To See Images As Gif For That.\"\r\n            onChange={this.handleChange}\r\n            value={this.state.valueInput}\r\n          />\r\n\r\n          <button id=\"Btn\" onClick={(e) => this.checkSpace(e)}>\r\n            Submit\r\n          </button> */}\r\n          <div style={{display: \"flex\", justifyContent: \"center\", marginTop: \"6vh\"}}>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"userInput\"\r\n                onChange={this.handleChange}\r\n                value={this.state.valueInput}\r\n                placeholder=\"Type Anything\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <button onClick={(e) => this.checkSpace(e)} type=\"submit\" id = \"mybutton\" className=\"btn btn-primary mb-3\">\r\n                Show!\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {/* <input id=\"Sub\" type=\"submit\" value=\"Submit\" /> */}\r\n        </form>\r\n        <br />\r\n\r\n        <div id=\"container\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../index.css\";\r\nimport swal from \"sweetalert\";\r\nexport default class DeletePage extends Component {\r\n  myArr = this.props.productProps.name;\r\n  myArrQuan = this.props.productProps.quan;\r\n  myArrImages = this.props.productProps.images;\r\n  faveName = this.props.isfave.isFaveArrayName;\r\n  faveQuan = this.props.isfave.isFaveArrayQuan;\r\n  faveImage = this.props.isfave.isFaveArrayImage;\r\n\r\n  // This Method For Deleting All The Products When the user click the button.\r\n  deleteAll = () => {\r\n    console.log(\"Delete All\");\r\n\r\n    this.props.deleteAllFun();\r\n  };\r\n\r\n  // This method for delete a specific row in the cart\r\n  deleteProduct = (deletedRowName, deletedRowQuan, deletedRowImage) => {\r\n    // e.preventDefault();\r\n    // console.log(this.myArr);\r\n    console.log(deletedRowName, deletedRowQuan, deletedRowImage);\r\n    this.props.dOperation(\r\n      deletedRowName,\r\n      deletedRowQuan,\r\n      deletedRowImage,\r\n      this.myArr,\r\n      this.myArrQuan,\r\n      this.myArrImages\r\n    );\r\n  };\r\n\r\n  // Here To Print That Table as dynamically with a new product name and quantity\r\n  goCheck = () => {\r\n    let counter = 1;\r\n    console.log(this.myArr);\r\n    if (this.myArr.length > 0) {\r\n      return this.myArr.map((eachName, eachQuan) => {\r\n        \r\n        return (\r\n          <tr key={counter}>\r\n            <td>{counter++}</td>\r\n            <td>{eachName}</td>\r\n            <td>{this.props.productProps.quan[eachQuan]}</td>\r\n            <td>\r\n              <img\r\n                className=\"img-thumbnail\"\r\n                src={this.myArrImages[eachQuan]}\r\n                alt=\"Empty\"\r\n              ></img>\r\n            </td>\r\n            <td\r\n              id=\"edit\"\r\n              onClick={() =>\r\n                this.deleteProduct(\r\n                  eachName,\r\n                  this.props.productProps.quan[eachQuan],\r\n                  this.props.productProps.images[eachQuan]\r\n                )\r\n              }\r\n            >\r\n              Delete\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <span className=\"text-center\">\r\n            <h1>Your Cart</h1>\r\n          </span>\r\n\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Product Name</th>\r\n                <th>Quantity</th>\r\n                <th>Image</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.goCheck()}</tbody>\r\n          </table>\r\n\r\n          <button\r\n            style={{ margin: \"auto\", display: \"block\" }}\r\n            id=\"deleteBtn\"\r\n            className=\"btn btn-danger\"\r\n            onClick={this.deleteAll}\r\n          >\r\n            Clear All Products\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../index.css\";\r\nexport default class GetAll extends Component {\r\n\r\n  constructor(props) {\r\n    \r\n    super(props);\r\n\r\n    this.isFave = this.isFave.bind(this);\r\n  }\r\n\r\n  isFave = (faveName , faveQuan) => {\r\n   // e.preventDefault();\r\n    console.log(\"Fave Method \", faveName, faveQuan);\r\n    this.props.myFun(faveName, faveQuan);\r\n  }\r\n  goCheck = () => {\r\n    let counter = 1;\r\n    if (this.props.productProps.name.length > 0) {\r\n      return this.props.productProps.name.map((eachName, eachQuan) => {\r\n        return (\r\n          <tr key={counter}>\r\n            <td>{counter++}</td>\r\n            <td>{eachName}</td>\r\n            <td>{this.props.productProps.quan[eachQuan]}</td>\r\n            <td><img className=\"img-thumbnail\" src={this.props.productProps.images[eachQuan]} alt=\"Empty\"></img></td>\r\n            <td id=\"edit\" onClick = {() => this.isFave(eachName, this.props.productProps.quan[eachQuan])}>Add To Favorite List</td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <span className=\"text-center\">\r\n          <h1>Your Products</h1>\r\n        </span>\r\n\r\n        <table className = \"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Product Name</th>\r\n              <th>Quantity</th>\r\n              <th>Image</th>\r\n              <th>Favorite</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.goCheck()}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Fave extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.removeFave = this.removeFave.bind(this);\r\n  }\r\n  removeFave = (removeName, removeQuan) => {\r\n    console.log(\"RemoveFave = \", removeName, \" \", removeQuan);\r\n\r\n    this.props.removeProps(removeName, removeQuan);\r\n\r\n  \r\n  };\r\n\r\n  goCheck = () => {\r\n    // console.log(\"FAVE: 36:\", this.props.productProps)\r\n    console.log(\"FAVE: 37:\", this.props.faveProps)\r\n    let counter = 1;\r\n    if (this.props.faveProps.isFaveArrayName.length > 0) {\r\n      return this.props.faveProps.isFaveArrayName.map((eachName, eachQuan) => {\r\n        return (\r\n          <tr key={counter}>\r\n            <td>{counter++}</td>\r\n            <td>{eachName}</td>\r\n            <td>{this.props.productProps.quan[eachQuan]}</td>\r\n            <td><img className=\"img-thumbnail\" src={this.props.productProps.images[eachQuan]} alt=\"Empty\"></img></td>\r\n            <td\r\n              id=\"remove-link\"\r\n              onClick={() =>\r\n                this.removeFave(\r\n                  eachName,\r\n                  this.props.faveProps.isFaveArrayQuan[eachQuan]\r\n                )\r\n              }\r\n            >\r\n              Remove From Favorite List\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <span className=\"text-center\">\r\n          <h1 style={{ color: \"red\" }}>Your Favorite Products</h1>\r\n        </span>\r\n\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Product Name</th>\r\n              <th>Quantity</th>\r\n              <th>Image</th>\r\n              <th>Remove</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.goCheck()}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Logo_Stationery.3ea0f6ed.PNG\";","import React, { Component } from \"react\";\nimport Home from \"./Components/Home\";\nimport EditPage from \"./Components/EditPage\";\nimport AddPage from \"./Components/AddPage\";\nimport \"./App.css\";\nimport APIPage from \"./Components/APIPage\";\nimport DeletePage from \"./Components/DeletePage\";\nimport GetAll from \"./Components/GetAll\";\nimport Fave from \"./Components/Fave\";\nimport logo from \"./Images/Logo_Stationery.PNG\";\nimport swal from \"sweetalert\";\nimport $ from \"jquery\";\n\n// This Import For Brings Icons From react-icons/ai\nimport { RiHeartAddLine } from \"react-icons/ri\";\n\n// These Imports For Router\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      objectOfProducts: {\n        name: [],\n        quan: [],\n        images: [],\n      },\n\n      //To store the favorite products name and quantity.\n      faveObjects: {\n        isFaveArrayName: [],\n        isFaveArrayQuan: [],\n        isFaveArrayImage: [],\n      },\n    };\n\n    this.AddProduct = this.AddProduct.bind(this);\n  }\n  // let newName = this.state.objectOfProducts.name\n  // newName.push(pName)\n  // this.setState({\n  //     name: newName\n  // })\n\n  AddProduct = (pName, quan, image) => {\n    // This Function for add a product and save it in the array.\n    console.log(pName, quan, image);\n    console.log(this.state.objectOfProducts.images);\n\n    this.setState({\n      objectOfProducts: {\n        name: [...this.state.objectOfProducts.name, pName],\n        quan: [...this.state.objectOfProducts.quan, quan],\n        images: this.state.objectOfProducts.images.concat(image),\n      },\n    });\n    swal({\n      title: \"Added Successfully\",\n      icon: \"success\",\n    });\n    console.log(\"Added Success: \", this.state.objectOfProducts);\n  };\n\n  deleteFun = (\n    deletedRowName,\n    deletedRowQuan,\n    deletedRowImage,\n    pName,\n    quan,\n    image\n  ) => {\n    console.log(\"ROW: \", deletedRowName, deletedRowQuan, deletedRowImage);\n    console.log(\"We Gonna Delete => : \", pName, quan, image);\n\n    swal({\n      title: \"Are You Sure?\",\n      text: \"Are you sure you want to delete this products?\",\n      icon: \"warning\",\n      buttons: true, // This button to tell the Sweetalert to add a cancel button with confirmation button\n      dangerMode: true, // The focus will automatically be set on the cancel button instead of the confirm button\n    }).then((willDelete) => {\n      if (willDelete) {\n        swal({\n          title: \"Delete Product\",\n          text: \"Deleted Successfully\",\n          icon: \"success\",\n        });\n        // this for deleted from the favorite section if it is there.\n        if (this.state.faveObjects.isFaveArrayName.includes(deletedRowName)) {\n          let knowIndex =\n            this.state.faveObjects.isFaveArrayName.indexOf(deletedRowName);\n          this.state.faveObjects.isFaveArrayName.splice(knowIndex, 1);\n        }\n\n        // This For Deleting the Name of The Product\n        if (this.state.objectOfProducts.name.includes(deletedRowName)) {\n          let knowIndex =\n            this.state.objectOfProducts.name.indexOf(deletedRowName);\n          this.state.objectOfProducts.name.splice(knowIndex, 1);\n        }\n\n        // This For Deleting the Quantity of The Product\n        if (this.state.objectOfProducts.quan.includes(deletedRowQuan)) {\n          let knowIndex =\n            this.state.objectOfProducts.quan.indexOf(deletedRowQuan);\n          this.state.objectOfProducts.quan.splice(knowIndex, 1);\n        }\n\n        // This For Deleting the Image of The Product\n        if (this.state.objectOfProducts.images.includes(deletedRowImage)) {\n          let knowIndex =\n            this.state.objectOfProducts.images.indexOf(deletedRowImage);\n          this.state.objectOfProducts.images.splice(knowIndex, 1);\n        }\n\n        // console.log(\"81: \", this.state.objectOfProducts);\n        // To Update the arrays and re-rendering again with new list\n        this.setState({\n          objectOfProducts: {\n            name: this.state.objectOfProducts.name,\n            quan: this.state.objectOfProducts.quan,\n            images: this.state.objectOfProducts.images,\n          },\n          // faveObjects: {\n          //   isFaveArrayName: this.state.objectOfProducts.name,\n          //   isFaveArrayQuan: this.state.objectOfProducts.quan,\n          // }\n        });\n        console.log(\"After 130: \", this.state.objectOfProducts);\n        console.log(\"131: \", this.state.faveObjects);\n      }\n    });\n  };\n\n\n  // Delete All  \n\n  deleteAll = () => {\n\n    console.log(\"Inside Delete All Fun\");\n\n    swal({\n      title: \"Are You Sure?\",\n      text: \"Are you sure you want to delete all products?\",\n      icon: \"warning\",\n      buttons: true, // This button to tell the Sweetalert to add a cancel button with confirmation button\n      dangerMode: true, // The focus will automatically be set on the cancel button instead of the confirm button\n    }).then((willDelete) => {\n      if (willDelete) {\n        swal({\n          title: \"Deleted All\",\n          text: \"Deleted Successfully\",\n          icon: \"success\",\n        });\n        // Here Is the actuall deleting operation, I've used the splice method to delete the entire array.\n        this.state.objectOfProducts.name.splice(0, this.state.objectOfProducts.name.length);\n        this.state.objectOfProducts.quan.splice(0, this.state.objectOfProducts.quan.length);\n        this.state.objectOfProducts.images.splice(0, this.state.objectOfProducts.images.length);\n        this.state.faveObjects.isFaveArrayName.splice(0, this.state.faveObjects.isFaveArrayName.length);\n        \n\n        // To Update the arrays and re-rendering again with new list\n        this.setState({\n          objectOfProducts: {\n            name: this.state.objectOfProducts.name,\n            quan: this.state.objectOfProducts.quan,\n            images: this.state.objectOfProducts.images,\n          },\n          faveObjects: {\n            isFaveArrayName: this.state.faveObjects.isFaveArrayName,\n            isFaveArrayQuan: this.state.faveObjects.isFaveArrayQuan,\n            // images\n          },\n        });\n        console.log(\"177: \", this.props.isfave);\n      }\n    });\n  }\n\n  myFave = (faveName, faveQuan) => {\n    // This Function For Add a marked product to the favorite array.\n\n    console.log(\"111: \", faveName, faveQuan);\n    let newFaveArrayName = this.state.faveObjects.isFaveArrayName;\n    newFaveArrayName.push(faveName);\n    let newFaveArrayQuan = this.state.faveObjects.isFaveArrayQuan;\n    newFaveArrayQuan.push(faveQuan);\n    this.setState({\n      faveObjects: {\n        isFaveArrayName: newFaveArrayName,\n        isFaveArrayQuan: newFaveArrayQuan,\n      },\n    });\n    console.log(\"22:\", this.state.faveObjects.isFaveArrayName);\n    console.log(this.state.faveObjects.isFaveArrayQuan);\n\n    $(\"span\").removeClass(\"newstyle\");\n\n    swal({\n      title: \"Added Successfully\",\n      icon: \"success\",\n    });\n    $(\"span\").addClass(\"newstyle\");\n  };\n\n  removeOperation = (removeName, removeQuan) => {\n    console.log(\"RemoveFave From APP = \", removeName, \" \", removeQuan);\n\n    if (this.state.faveObjects.isFaveArrayName.includes(removeName)) {\n      let knowIndex =\n        this.state.faveObjects.isFaveArrayName.indexOf(removeName);\n      this.state.faveObjects.isFaveArrayName.splice(knowIndex, 1);\n    }\n    if (this.state.faveObjects.isFaveArrayQuan.includes(removeQuan)) {\n      let knowIndex =\n        this.state.faveObjects.isFaveArrayQuan.indexOf(removeQuan);\n      this.state.faveObjects.isFaveArrayQuan.splice(knowIndex, 1);\n    }\n\n    // To Update the arrays and re-rendering again with new list\n    this.setState({\n      faveProps: {\n        isFaveArrayName: this.state.faveObjects.isFaveArrayName,\n        isFaveArrayQuan: this.state.faveObjects.isFaveArrayQuan,\n      },\n    });\n\n    swal({\n      title: \"Removed Successfully\",\n      icon: \"success\",\n    });\n  };\n\n  render() {\n    console.log(\"New Array => \", this.state.objectOfProducts);\n    return (\n      <Router>\n        <div className=\"App\">\n          {/* <img src={ this.state.objectOfProducts.images} alt=\"Loading....\"></img> */}\n          <div className=\"container\">\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n              <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"/Stationery-Store-Project\">\n                  <img\n                    src={logo}\n                    alt=\"\"\n                    width=\"30\"\n                    height=\"24\"\n                    className=\"d-inline-block align-top\"\n                  ></img>\n                </a>\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  data-bs-toggle=\"collapse\"\n                  data-bs-target=\"#navbarSupportedContent\"\n                  aria-controls=\"navbarSupportedContent\"\n                  aria-expanded=\"false\"\n                  aria-label=\"Toggle navigation\"\n                >\n                  <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div\n                  className=\"collapse navbar-collapse\"\n                  id=\"navbarSupportedContent\"\n                >\n                  <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                    <li className=\"nav-item\">\n                      <NavLink\n                        to=\"/Fave\"\n                        style={{ textDecoration: \"none\" }}\n                        activeClassName=\"fave-link\"\n                      >\n                        <h2\n                          id=\"fave-icon\"\n                          style={{ width: \"30\", height: \"24\" }}\n                          className=\"d-inline-block align-top\"\n                        >\n                          <RiHeartAddLine />\n                          <span className=\"counter-style\">\n                            {console.log(this.state.faveObjects)}\n                            {console.log(\n                              this.state.faveObjects.isFaveArrayName.length\n                            )}\n                            {this.state.faveObjects.isFaveArrayName.length}\n                          </span>\n                        </h2>\n                      </NavLink>\n                    </li>\n\n                    <p className=\"title\">Stationery Store In Your Hands</p>\n                  </ul>\n                  <NavLink\n                    to=\"/Stationery-Store-Project/API_Page\"\n                    style={{ textDecoration: \"none\" }}\n                    activeClassName=\"api-link\"\n                  >\n                    <h4 id=\"API-tag\">Something Fun</h4>\n                  </NavLink>\n                </div>\n              </div>\n            </nav>\n            <p className=\"text-center\" style={{ margin: \"4vh 0\" }}>\n              <img\n                src={logo}\n                className=\"img-rounded\"\n                alt=\"MyImage\"\n                width=\"15%\"\n                height=\"15%\"\n                rounded=\"true\"\n              ></img>\n            </p>\n            <h3 className=\"text-center\" style={{ margin: \"10vh 0\" }}>\n              {\" \"}\n              What Do You Want?\n            </h3>\n            <ul className=\"nav justify-content-center nav-pills\">\n              <li className=\"nav-item\">\n                <NavLink\n                  className=\"nav-link\"\n                  role=\"tab\"\n                  style={{ textDecoration: \"none\" }}\n                  to=\"/Add-Page\"\n                >\n                  Add A Product\n                </NavLink>\n                {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                  Active\n                </a> */}\n              </li>\n              <li className=\"nav-item\">\n                <NavLink\n                  style={{ textDecoration: \"none\" }}\n                  activeClassName=\"edit-link\"\n                  className=\"nav-link\"\n                  data-toggle=\"pill\"\n                  role=\"tab\"\n                  to=\"/Edit_Page\"\n                >\n                  Edit On A Product\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink\n                  style={{ textDecoration: \"none\" }}\n                  activeClassName=\"delete-link\"\n                  className=\"nav-link\"\n                  data-toggle=\"pill\"\n                  to=\"/Delete_Page\"\n                >\n                  Delete A Product/s\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink\n                  style={{ textDecoration: \"none\" }}\n                  activeClassName=\"get-link\"\n                  className=\"nav-link\"\n                  data-toggle=\"pill\"\n                  to=\"/Get_All\"\n                >\n                  Get All Products\n                </NavLink>\n              </li>\n            </ul>{\" \"}\n            {/* <div className=\"link-tags\"> */}\n            {/* We can use Link tag, but I've used NavLink to styling purpose only because if we have used NavLink we can't add styling on it. */}\n            {/* </div> */}\n            {/* Line 234: Here To set the Home Component as Default Page. */}\n            <Route exact path=\"/\" component={Home}></Route>\n            <Route exact path=\"/Home\" component={Home}></Route>\n            <Route\n              exact\n              path=\"/Add-Page\"\n              component={() => <AddPage test={this.AddProduct} />}\n            ></Route>\n            <Route\n              exact\n              path=\"/Edit_Page\"\n              component={() => (\n                <EditPage productProps={this.state.objectOfProducts} />\n              )}\n            ></Route>\n            <Route\n              exact\n              path=\"/Delete_Page\"\n              component={() => (\n                <DeletePage\n                  dOperation={this.deleteFun}\n                  deleteAllFun = {this.deleteAll}\n                  productProps={this.state.objectOfProducts}\n                  myFun={this.delete}\n                  isfave={this.state.faveObjects}\n                />\n              )}\n            ></Route>\n            <Route\n              exact\n              path=\"/Get_All\"\n              component={() => (\n                <GetAll\n                  productProps={this.state.objectOfProducts}\n                  myFun={this.myFave}\n                />\n              )}\n            ></Route>\n            <Route\n              exact\n              path=\"/Stationery-Store-Project/API_Page\"\n              component={APIPage}\n            ></Route>\n            <Route\n              exact\n              path=\"/Fave\"\n              component={() => (\n                <Fave\n                  faveProps={this.state.faveObjects}\n                  productProps={this.state.objectOfProducts}\n                  removeProps={this.removeOperation}\n                />\n              )}\n            ></Route>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}